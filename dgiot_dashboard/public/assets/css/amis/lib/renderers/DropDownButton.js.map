{
    "version": 3,
    "file": "DropDownButton.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/DropDownButton.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport Overlay from '../components/Overlay';\nimport PopOver from '../components/PopOver';\nimport TooltipWrapper from '../components/TooltipWrapper';\nimport type {TooltipObject, Trigger} from '../components/TooltipWrapper';\nimport {isDisabled, isVisible, noop} from '../utils/helper';\nimport {filter} from '../utils/tpl';\nimport {Icon} from '../components/icons';\nimport {BaseSchema, SchemaClassName} from '../Schema';\nimport {ActionSchema} from './Action';\nimport {DividerSchema} from './Divider';\nimport {RootClose} from '../utils/RootClose';\n\n/**\n * 下拉按钮渲染器。\n * 文档：https://baidu.gitee.io/amis/docs/components/dropdown-button\n */\nexport interface DropdownButtonSchema extends BaseSchema {\n  /**\n   * 指定为 DropDown Button 类型\n   */\n  type: 'dropdown-button';\n\n  /**\n   * 是否独占一行 `display: block`\n   */\n  block?: boolean;\n\n  /**\n   * 给 Button 配置 className。\n   */\n  btnClassName?: SchemaClassName;\n\n  /**\n   * 按钮集合\n   */\n  buttons?: Array<ActionSchema | DividerSchema | 'divider'>;\n\n  /**\n   * 按钮文字\n   */\n  label?: string;\n\n  /**\n   * 按钮级别，样式\n   */\n  level?: 'info' | 'success' | 'danger' | 'warning' | 'primary' | 'link';\n\n  /**\n   * 按钮提示文字，hover 时显示\n   */\n  // tooltip?: SchemaTooltip;\n\n  /**\n   * 点击外部是否关闭\n   */\n  closeOnOutside?: boolean;\n\n  /**\n   * 点击内容是否关闭\n   */\n  closeOnClick?: boolean;\n\n  /**\n   * 按钮大小\n   */\n  size?: 'xs' | 'sm' | 'md' | 'lg';\n\n  /**\n   * 对齐方式\n   */\n  align?: 'left' | 'right';\n\n  /**\n   * 是否只显示图标。\n   */\n  iconOnly?: boolean;\n\n  /**\n   * 触发条件，默认是 click\n   */\n  trigger?: 'click' | 'hover';\n  /**\n   * 是否显示下拉按钮\n   */\n  hideCaret?: boolean;\n}\n\nexport interface DropDownButtonProps\n  extends RendererProps,\n    Omit<DropdownButtonSchema, 'type' | 'className'> {\n  disabledTip?: string | TooltipObject;\n  /**\n   * 按钮提示文字，hover focus 时显示\n   */\n  tooltip?: string | TooltipObject;\n  placement?: 'top' | 'right' | 'bottom' | 'left';\n  tooltipContainer?: any;\n  tooltipTrigger?: Trigger | Array<Trigger>;\n  tooltipRootClose?: boolean;\n  defaultIsOpened?: boolean;\n  label?: any;\n  // 激活状态\n  isActived?: boolean;\n}\n\nexport interface DropDownButtonState {\n  isOpened: boolean;\n}\n\nexport default class DropDownButton extends React.Component<\n  DropDownButtonProps,\n  DropDownButtonState\n> {\n  state: DropDownButtonState = {\n    isOpened: false\n  };\n\n  static defaultProps: Pick<\n    DropDownButtonProps,\n    'placement' | 'tooltipTrigger' | 'tooltipRootClose'\n  > = {\n    placement: 'top',\n    tooltipTrigger: ['hover', 'focus'],\n    tooltipRootClose: false\n  };\n\n  target: any;\n  constructor(props: DropDownButtonProps) {\n    super(props);\n\n    this.open = this.open.bind(this);\n    this.close = this.close.bind(this);\n    this.toogle = this.toogle.bind(this);\n    this.domRef = this.domRef.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.defaultIsOpened) {\n      this.setState({\n        isOpened: true\n      });\n    }\n  }\n\n  domRef(ref: any) {\n    this.target = ref;\n  }\n\n  toogle(e: React.MouseEvent<any>) {\n    e.preventDefault();\n\n    this.setState({\n      isOpened: !this.state.isOpened\n    });\n  }\n\n  open() {\n    this.setState({\n      isOpened: true\n    });\n  }\n\n  close() {\n    this.setState({\n      isOpened: false\n    });\n  }\n\n  renderOuter() {\n    const {\n      render,\n      buttons,\n      data,\n      popOverContainer,\n      classnames: cx,\n      classPrefix: ns,\n      children,\n      align,\n      closeOnClick,\n      closeOnOutside\n    } = this.props;\n\n    let body = (\n      <RootClose\n        disabled={!this.state.isOpened}\n        onRootClose={closeOnOutside !== false ? this.close : noop}\n      >\n        {(ref: any) => {\n          return (\n            <ul\n              className={cx('DropDown-menu')}\n              onClick={closeOnClick ? this.close : noop}\n              ref={ref}\n            >\n              {children\n                ? children\n                : Array.isArray(buttons)\n                ? buttons.map((button, index) => {\n                    if (\n                      typeof button !== 'string' &&\n                      !isVisible(button, data)\n                    ) {\n                      return null;\n                    } else if (\n                      button === 'divider' ||\n                      button.type === 'divider'\n                    ) {\n                      return (\n                        <li key={index} className={cx('DropDown-divider')} />\n                      );\n                    }\n\n                    return (\n                      <li\n                        key={index}\n                        className={\n                          isDisabled(button, data) ? 'is-disabled' : ''\n                        }\n                      >\n                        {render(`button/${index}`, {\n                          type: 'button',\n                          ...(button as any),\n                          isMenuItem: true\n                        })}\n                      </li>\n                    );\n                  })\n                : null}\n            </ul>\n          );\n        }}\n      </RootClose>\n    );\n\n    if (popOverContainer) {\n      return (\n        <Overlay container={popOverContainer} target={() => this.target} show>\n          <PopOver\n            overlay\n            onHide={this.close}\n            classPrefix={ns}\n            className={cx('DropDown-popover')}\n            style={{minWidth: this.target?.offsetWidth}}\n          >\n            {body}\n          </PopOver>\n        </Overlay>\n      );\n    }\n\n    return body;\n  }\n\n  render() {\n    const {\n      tooltip,\n      placement,\n      tooltipContainer,\n      tooltipTrigger,\n      tooltipRootClose,\n      disabledTip,\n      block,\n      disabled,\n      btnDisabled,\n      btnClassName,\n      size,\n      label,\n      level,\n      primary,\n      className,\n      classnames: cx,\n      align,\n      iconOnly,\n      icon,\n      isActived,\n      trigger,\n      data,\n      hideCaret\n    } = this.props;\n\n    return (\n      <div\n        className={cx(\n          'DropDown ',\n          {\n            'DropDown--block': block,\n            'DropDown--alignRight': align === 'right',\n            'is-opened': this.state.isOpened,\n            'is-actived': isActived\n          },\n          className\n        )}\n        onMouseEnter={trigger === 'hover' ? this.open : () => {}}\n        onMouseLeave={trigger === 'hover' ? this.close : () => {}}\n        ref={this.domRef}\n      >\n        <TooltipWrapper\n          placement={placement}\n          tooltip={disabled ? disabledTip : tooltip}\n          container={tooltipContainer}\n          trigger={tooltipTrigger}\n          rootClose={tooltipRootClose}\n        >\n          <button\n            onClick={this.toogle}\n            disabled={disabled || btnDisabled}\n            className={cx(\n              'Button',\n              btnClassName,\n              typeof level === 'undefined'\n                ? 'Button--default'\n                : level\n                ? `Button--${level}`\n                : '',\n              {\n                'Button--block': block,\n                'Button--primary': primary,\n                'Button--iconOnly': iconOnly\n              },\n              size ? `Button--${size}` : ''\n            )}\n          >\n            {icon ? (\n              typeof icon === 'string' ? (\n                <i className={cx(icon, 'm-r-xs')} />\n              ) : (\n                icon\n              )\n            ) : null}\n            {typeof label === 'string' ? filter(label, data) : label}\n            {\n              !hideCaret\n              ? <span className={cx('DropDown-caret')} >\n                <Icon icon=\"caret\" className=\"icon\" />\n              </span>\n              : null\n            }\n          </button>\n        </TooltipWrapper>\n        {this.state.isOpened ? this.renderOuter() : null}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  type: 'dropdown-button'\n})\nexport class DropDownButtonRenderer extends DropDownButton {}\n"
    ]
}