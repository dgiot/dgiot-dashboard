{
    "version": 3,
    "file": "InputFile.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputFile.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport find from 'lodash/find';\nimport isPlainObject from 'lodash/isPlainObject';\n// @ts-ignore\nimport mapLimit from 'async/mapLimit';\nimport ImageControl from './InputImage';\nimport {Payload, ApiObject, ApiString} from '../../types';\nimport {filter} from '../../utils/tpl';\nimport Alert from '../../components/Alert2';\nimport {qsstringify, createObject, guid, isEmpty} from '../../utils/helper';\nimport {buildApi, normalizeApi} from '../../utils/api';\nimport Button from '../../components/Button';\nimport {Icon} from '../../components/icons';\nimport DropZone from 'react-dropzone';\nimport {FileRejection} from 'react-dropzone';\nimport {dataMapping} from '../../utils/tpl-builtin';\nimport {\n  SchemaApi,\n  SchemaClassName,\n  SchemaTokenizeableString\n} from '../../Schema';\n\n/**\n * File 文件上传控件\n * 文档：https://baidu.gitee.io/amis/docs/components/form/file\n */\nexport interface FileControlSchema extends FormBaseControl {\n  /**\n   * 指定为文件上传\n   */\n  type: 'input-file';\n\n  /**\n   * 上传文件按钮说明\n   * @default 请选择文件\n   */\n  btnLabel?: string;\n\n  /**\n   * 默认只支持纯文本，要支持其他类型，请配置此属性。建议直接填写文件后缀\n   * 如：.txt,.csv\n   *\n   * 多个类型用逗号隔开。\n   *\n   * @default text/plain\n   */\n  accept?: string;\n\n  /**\n   * 如果上传的文件比较小可以设置此选项来简单的把文件 base64 的值给 form 一起提交，目前不支持多选。\n   */\n  asBase64?: boolean;\n\n  /**\n   * 如果不希望 File 组件上传，可以配置 `asBlob` 或者 `asBase64`，采用这种方式后，组件不再自己上传了，而是直接把文件数据作为表单项的值，文件内容会在 Form 表单提交的接口里面一起带上。\n   */\n  asBlob?: boolean;\n\n  /**\n   * 是否自动开始上传\n   */\n  autoUpload?: boolean;\n\n  /**\n   * 默认 `/api/upload/chunk` 想自己存储时才需要关注。\n   */\n  chunkApi?: SchemaApi;\n\n  /**\n   * 分块大小，默认为 5M.\n   *\n   * @default 5242880\n   */\n  chunkSize?: number;\n\n  /**\n   * 分割符\n   */\n  delimiter?: string;\n\n  /**\n   * 默认显示文件路径的时候会支持直接下载，\n   * 可以支持加前缀如：`http://xx.dom/filename=` ，\n   * 如果不希望这样，可以把当前配置项设置为 `false`。\n   *\n   * 1.1.6 版本开始将支持变量 ${xxx} 来自己拼凑个下载地址，并且支持配置成 post.\n   */\n  downloadUrl?: SchemaApi;\n\n  /**\n   * 默认 `file`, 如果你不想自己存储，则可以忽略此属性。\n   * @default file\n   */\n  fileField?: string;\n\n  /**\n   * 默认 `/api/upload/finishChunkApi` 想自己存储时才需要关注。\n   *\n   * @default /api/upload/finishChunkApi\n   */\n  finishChunkApi?: SchemaApi;\n\n  /**\n   * 是否隐藏上传按钮\n   */\n  hideUploadButton?: boolean;\n\n  /**\n   * 最多的个数\n   */\n  maxLength?: number;\n\n  /**\n   * 默认没有限制，当设置后，文件大小大于此值将不允许上传。\n   */\n  maxSize?: number;\n\n  /**\n   * 默认 `/api/upload/file` 如果想自己存储，请设置此选项。\n   *\n   * @default /api/upload/file\n   */\n  receiver?: SchemaApi;\n\n  /**\n   * 默认 `/api/upload/startChunk` 想自己存储时才需要关注。\n   *\n   * @default /api/upload/startChunk\n   */\n  startChunkApi?: string;\n\n  /**\n   * 默认为 'auto' amis 所在服务器，限制了文件上传大小不得超出10M，所以 amis 在用户选择大文件的时候，自动会改成分块上传模式。\n   */\n  useChunk?: 'auto' | boolean;\n\n  /**\n   * 按钮 CSS 类名\n   */\n  btnClassName?: SchemaClassName;\n\n  /**\n   * 上传按钮 CSS 类名\n   */\n  btnUploadClassName?: SchemaClassName;\n\n  /**\n   * 是否为多选\n   */\n  multiple?: boolean;\n\n  /**\n   * 1. 单选模式：当用户选中某个选项时，选项中的 value 将被作为该表单项的值提交，\n   * 否则，整个选项对象都会作为该表单项的值提交。\n   * 2. 多选模式：选中的多个选项的 `value` 会通过 `delimiter` 连接起来，\n   * 否则直接将以数组的形式提交值。\n   */\n  joinValues?: boolean;\n\n  /**\n   * 开启后将选中的选项 value 的值封装为数组，作为当前表单项的值。\n   */\n  extractValue?: boolean;\n\n  /**\n   * 清除时设置的值\n   */\n  resetValue?: any;\n\n  /**\n   * 上传后把其他字段同步到表单内部。\n   */\n  autoFill?: {\n    [propName: string]: SchemaTokenizeableString;\n  };\n\n  /**\n   * 接口返回的数据中，哪个用来当做值\n   */\n  valueField?: string;\n\n  /**\n   * 接口返回的数据中，哪个用来展示文件名\n   */\n  nameField?: string;\n\n  /**\n   * 接口返回的数据中哪个用来作为下载地址。\n   */\n  urlField?: string;\n\n  /**\n   * 按钮状态文案配置。\n   */\n  stateTextMap?: {\n    init: string;\n    pending: string;\n    uploading: string;\n    error: string;\n    uploaded: string;\n    ready: string;\n  };\n}\n\nexport interface FileProps\n  extends FormControlProps,\n    Omit<\n      FileControlSchema,\n      'type' | 'className' | 'descriptionClassName' | 'inputClassName'\n    > {\n  stateTextMap: {\n    init: string;\n    pending: string;\n    uploading: string;\n    error: string;\n    uploaded: string;\n    ready: string;\n  };\n}\n\nexport interface FileX extends File {\n  state?:\n    | 'init'\n    | 'error'\n    | 'pending'\n    | 'uploading'\n    | 'uploaded'\n    | 'invalid'\n    | 'ready';\n  progress?: number;\n  id?: any;\n}\n\nexport interface FileValue {\n  filename?: string;\n  value?: any;\n  name?: string;\n  url?: string;\n  state:\n    | 'init'\n    | 'error'\n    | 'pending'\n    | 'uploading'\n    | 'uploaded'\n    | 'invalid'\n    | 'ready';\n  id?: any;\n  [propName: string]: any;\n}\n\nexport interface FileState {\n  uploading: boolean;\n  files: Array<FileX | FileValue>;\n  error?: string | null;\n}\nlet preventEvent = (e: any) => e.stopPropagation();\n\nexport function getNameFromUrl(url: string) {\n  if (/(?:\\/|^)([^\\/]+?)$/.test(url)) {\n    return decodeURIComponent(RegExp.$1);\n  }\n\n  return url;\n}\n\nexport default class FileControl extends React.Component<FileProps, FileState> {\n  static defaultProps: Partial<FileProps> = {\n    maxSize: 0,\n    maxLength: 0,\n    placeholder: '',\n    receiver: '/api/upload/file',\n    fileField: 'file',\n    joinValues: true,\n    extractValue: false,\n    delimiter: ',',\n    downloadUrl: '', // '/api/file/'\n    useChunk: 'auto',\n    chunkSize: 5 * 1024 * 1024, // 文件大于5M， 自动分块上传\n    startChunkApi: '/api/upload/startChunk',\n    chunkApi: '/api/upload/chunk',\n    finishChunkApi: '/api/upload/finishChunk',\n    accept: '',\n    multiple: false,\n    autoUpload: true,\n    hideUploadButton: false,\n    stateTextMap: {\n      init: '',\n      pending: '等待上传',\n      uploading: '上传中',\n      error: '上传出错',\n      uploaded: '已上传',\n      ready: ''\n    },\n    asBase64: false\n  };\n\n  state: FileState;\n  current: FileValue | FileX | null;\n  resolve?: (value?: any) => void;\n  emitValue: any;\n  fileUploadCancelExecutors: Array<{\n    file: any;\n    executor: () => void;\n  }> = [];\n\n  static valueToFile(\n    value: string | FileValue,\n    props: FileProps,\n    files?: Array<FileX | FileValue>\n  ): FileValue | undefined {\n    let file: FileValue | FileX | undefined =\n      files && typeof value === 'string'\n        ? find(files, item => (item as FileValue).value === value)\n        : undefined;\n    const valueField = props.valueField || 'value';\n    const urlField = props.urlField || 'url';\n    const nameField = props.nameField || 'name';\n    return value\n      ? value instanceof File\n        ? {\n            state: 'ready',\n            [valueField]: value,\n            [urlField]: value,\n            [nameField]: value.name,\n            id: guid()\n          }\n        : {\n            ...(typeof value === 'string'\n              ? {\n                  state: file && file.state ? file.state : 'init',\n                  [valueField]: value,\n                  [urlField]: value,\n                  [nameField]:\n                    (file && file.name) ||\n                    (/^data:/.test(value)\n                      ? 'base64数据'\n                      : getNameFromUrl(value)),\n                  id: guid()\n                }\n              : (value as FileValue))\n          }\n      : undefined;\n  }\n\n  dropzone = React.createRef<any>();\n  constructor(props: FileProps) {\n    super(props);\n\n    const value: string | Array<string | FileValue> | FileValue = props.value;\n    const valueField = props.valueField || 'value';\n    const joinValues = props.joinValues;\n    const delimiter = props.delimiter as string;\n    let files: Array<FileValue> = [];\n\n    if (value && value instanceof Blob) {\n      files = [value as any];\n    } else if (value) {\n      files = (Array.isArray(value)\n        ? value\n        : joinValues\n        ? `${(value as any)[valueField] || value}`.split(delimiter)\n        : [value as any]\n      )\n        .map(item => FileControl.valueToFile(item, props) as FileValue)\n        .filter(item => item);\n    }\n\n    this.state = {\n      files,\n      uploading: false\n    };\n\n    this.sendFile = this.sendFile.bind(this);\n    this.removeFile = this.removeFile.bind(this);\n    this.clearError = this.clearError.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.handleDropRejected = this.handleDropRejected.bind(this);\n    this.startUpload = this.startUpload.bind(this);\n    this.stopUpload = this.stopUpload.bind(this);\n    this.retry = this.retry.bind(this);\n    this.toggleUpload = this.toggleUpload.bind(this);\n    this.tick = this.tick.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.uploadFile = this.uploadFile.bind(this);\n    this.uploadBigFile = this.uploadBigFile.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.syncAutoFill = this.syncAutoFill.bind(this);\n  }\n\n  componentDidMount() {\n    this.syncAutoFill();\n  }\n\n  componentDidUpdate(prevProps: FileProps) {\n    const props = this.props;\n\n    if (prevProps.value !== props.value && this.emitValue !== props.value) {\n      const value: string | Array<string | FileValue> | FileValue = props.value;\n      const joinValues = props.joinValues;\n      const delimiter = props.delimiter as string;\n      let files: Array<FileValue> = [];\n\n      if (value) {\n        files = (Array.isArray(value)\n          ? value\n          : joinValues && typeof value === 'string'\n          ? value.split(delimiter)\n          : [value as any]\n        )\n          .map(item => {\n            let obj = FileControl.valueToFile(\n              item,\n              props,\n              this.state.files\n            ) as FileValue;\n            let org;\n\n            if (\n              obj &&\n              ((org = find(\n                this.state.files,\n                (item: FileValue) => item.value === obj.value\n              )) as FileValue)\n            ) {\n              obj = {\n                ...org,\n                ...obj,\n                id: obj.id || org!.id\n              };\n            }\n\n            return obj;\n          })\n          .filter(item => item);\n      }\n\n      this.setState(\n        {\n          files: files\n        },\n        this.syncAutoFill\n      );\n    }\n  }\n\n  handleDrop(files: Array<FileX>) {\n    if (!files.length) {\n      return;\n    }\n\n    const {maxSize, multiple, maxLength, translate: __} = this.props;\n    const nameField = this.props.nameField || 'name';\n    let allowed =\n      multiple && maxLength\n        ? maxLength - this.state.files.length\n        : files.length;\n\n    const inputFiles: Array<FileX> = [];\n\n    [].slice.call(files, 0, allowed).forEach((file: FileX) => {\n      if (maxSize && file.size > maxSize) {\n        this.props.env.alert(\n          __('File.maxSize', {\n            filename: file[nameField as keyof typeof file] || file.name,\n            actualSize: ImageControl.formatFileSize(file.size),\n            maxSize: ImageControl.formatFileSize(maxSize)\n          })\n        );\n        file.state = 'invalid';\n      } else {\n        file.state = 'pending';\n      }\n\n      file.id = guid();\n      inputFiles.push(file);\n    });\n\n    if (!inputFiles.length) {\n      return;\n    }\n\n    this.setState(\n      {\n        error: null,\n        files: multiple ? this.state.files.concat(inputFiles) : inputFiles\n      },\n      () => {\n        const {autoUpload} = this.props;\n\n        if (autoUpload) {\n          this.startUpload();\n        }\n      }\n    );\n  }\n\n  handleDropRejected(\n    rejectedFiles: FileRejection[],\n    evt: React.DragEvent<any>\n  ) {\n    if (evt.type !== 'change' && evt.type !== 'drop') {\n      return;\n    }\n    const {multiple, env, accept, translate: __} = this.props;\n    const nameField = this.props.nameField || 'name';\n\n    const files = rejectedFiles.map(fileRejection => ({\n      ...fileRejection.file,\n      state: 'invalid',\n      id: guid(),\n      [nameField]: fileRejection.file.name\n    }));\n\n    // this.setState({\n    //   files: multiple\n    //     ? this.state.files.concat(files)\n    //     : this.state.files.length\n    //     ? this.state.files\n    //     : files.slice(0, 1)\n    // });\n\n    env.alert(\n      __('File.invalidType', {\n        files: files.map((item: any) => `「${item[nameField]}」`).join(' '),\n        accept\n      })\n    );\n  }\n\n  handleClickFile(file: FileX | FileValue, e: React.MouseEvent) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    const {data, env, downloadUrl} = this.props;\n    const urlField = this.props.urlField || 'url';\n    const valueField = this.props.valueField || 'value';\n\n    const fileUrl =\n      file[urlField as keyof typeof file] ||\n      file[valueField as keyof typeof file];\n\n    let api =\n      typeof downloadUrl === 'string' && !~downloadUrl.indexOf('$')\n        ? `${downloadUrl}${fileUrl}`\n        : downloadUrl\n        ? downloadUrl\n        : `${fileUrl}`;\n\n    if (api) {\n      const ctx = createObject(data, {\n        ...file\n      });\n      const apiObject = normalizeApi(api);\n\n      if (apiObject.method?.toLowerCase() === 'get' && !apiObject.data) {\n        window.open(buildApi(apiObject, ctx).url);\n      } else {\n        apiObject.responseType = apiObject.responseType ?? 'blob';\n        env.fetcher(apiObject, ctx, {\n          responseType: 'blob'\n        });\n      }\n    }\n  }\n\n  handleSelect() {\n    this.dropzone.current && this.dropzone.current.open();\n  }\n\n  startUpload(retry: boolean = false) {\n    if (this.state.uploading) {\n      return;\n    }\n\n    this.setState(\n      {\n        uploading: true,\n        files: this.state.files.map(file => {\n          if (retry && file.state === 'error') {\n            file.state = 'pending';\n            file.progress = 0;\n          }\n\n          return file;\n        })\n      },\n      this.tick\n    );\n  }\n\n  toggleUpload(e: React.MouseEvent<HTMLButtonElement>) {\n    e.preventDefault();\n    return this.state.uploading ? this.stopUpload() : this.startUpload();\n  }\n\n  stopUpload() {\n    if (!this.state.uploading) {\n      return;\n    }\n\n    this.setState({\n      uploading: false\n    });\n  }\n\n  retry() {\n    this.startUpload(true);\n  }\n\n  tick() {\n    if (this.current || !this.state.uploading) {\n      return;\n    }\n\n    const {translate: __} = this.props;\n    const nameField = this.props.nameField || 'name';\n    const file = find(\n      this.state.files,\n      item => item.state === 'pending'\n    ) as FileX;\n    if (file) {\n      this.current = file;\n\n      file.state = 'uploading';\n\n      this.setState(\n        {\n          files: this.state.files.concat()\n        },\n        () =>\n          this.sendFile(\n            file,\n            (error, file, obj) => {\n              const files = this.state.files.concat();\n              const idx = files.indexOf(file as FileX);\n\n              if (!~idx) {\n                return;\n              }\n\n              let newFile: FileValue = file as FileValue;\n\n              if (error) {\n                newFile.state = 'error';\n                newFile.error = error;\n              } else {\n                newFile = obj as FileValue;\n                newFile[nameField] = newFile[nameField] || file!.name;\n              }\n              files.splice(idx, 1, newFile);\n              this.current = null;\n              this.setState(\n                {\n                  error: error ? error : null,\n                  files: files\n                },\n                this.tick\n              );\n            },\n            progress => {\n              const files = this.state.files.concat();\n              const idx = files.indexOf(file);\n\n              if (!~idx) {\n                return;\n              }\n\n              // file 是个非 File 对象，先不copy了直接改。\n              file.progress = progress;\n              this.setState({\n                files\n              });\n            }\n          )\n      );\n    } else {\n      this.setState(\n        {\n          uploading: false\n        },\n        () => {\n          this.onChange(!!this.resolve);\n\n          if (this.resolve) {\n            this.resolve(\n              this.state.files.some(file => file.state === 'error')\n                ? __('File.errorRetry')\n                : null\n            );\n            this.resolve = undefined;\n          }\n        }\n      );\n    }\n  }\n\n  sendFile(\n    file: FileX,\n    cb: (error: null | string, file?: FileX, obj?: FileValue) => void,\n    onProgress: (progress: number) => void\n  ) {\n    const {\n      receiver,\n      fileField,\n      useChunk,\n      chunkSize,\n      startChunkApi,\n      chunkApi,\n      finishChunkApi,\n      asBase64,\n      asBlob,\n      data,\n      translate: __\n    } = this.props;\n    const nameField = this.props.nameField || 'name';\n    const valueField = this.props.valueField || 'value';\n\n    if (asBase64) {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        file.state = 'ready';\n        cb(null, file, {\n          [valueField]: reader.result as string,\n          [nameField]: file.name,\n          state: 'ready',\n          id: file.id\n        });\n      };\n      reader.onerror = (error: any) => cb(error.message);\n      return;\n    } else if (asBlob) {\n      file.state = 'ready';\n      setTimeout(\n        () =>\n          cb(null, file, {\n            [nameField]: file.name,\n            [valueField]: file,\n            state: 'ready',\n            id: file.id\n          }),\n        4\n      );\n      return;\n    }\n\n    let fn =\n      (useChunk === 'auto' && chunkSize && file.size > chunkSize) ||\n      useChunk === true\n        ? this.uploadBigFile\n        : this.uploadFile;\n\n    fn(\n      file,\n      receiver as string,\n      {},\n      {\n        fieldName: fileField,\n        chunkSize,\n        startChunkApi,\n        chunkApi,\n        finishChunkApi,\n        data\n      },\n      onProgress\n    )\n      .then(ret => {\n        if (ret.status || !ret.data) {\n          throw new Error(ret.msg || __('File.errorRetry'));\n        }\n\n        onProgress(1);\n        let value =\n          (ret.data as any).value || (ret.data as any).url || ret.data;\n\n        cb(null, file, {\n          ...(isPlainObject(ret.data) ? ret.data : null),\n          value: value,\n          state: 'uploaded',\n          id: file.id\n        });\n      })\n      .catch(error => {\n        cb(error.message || __('File.errorRetry'), file);\n      });\n  }\n\n  removeFile(file: FileX | FileValue, index: number) {\n    const files = this.state.files.concat();\n\n    this.removeFileCanelExecutor(file, true);\n    files.splice(index, 1);\n\n    const isUploading = this.current === file;\n    if (isUploading) {\n      this.current = null;\n    }\n\n    this.setState(\n      {\n        files: files\n      },\n      isUploading ? this.tick : this.onChange\n    );\n  }\n\n  clearError() {\n    this.setState({\n      error: null\n    });\n  }\n\n  onChange(changeImmediately?: boolean) {\n    const {\n      multiple,\n      onChange,\n      joinValues,\n      extractValue,\n      valueField,\n      delimiter,\n      resetValue,\n      asBlob,\n      autoFill,\n      onBulkChange\n    } = this.props;\n\n    const files = this.state.files.filter(\n      file => ~['uploaded', 'init', 'ready'].indexOf(file.state as string)\n    );\n    let value: any = multiple ? files : files[0];\n\n    if (value) {\n      if (extractValue || asBlob) {\n        value = Array.isArray(value)\n          ? value.map((item: any) => item[valueField || 'value'])\n          : value[valueField || 'value'];\n      } else if (joinValues) {\n        value = Array.isArray(value)\n          ? value\n              .map((item: any) => item[valueField || 'value'])\n              .join(delimiter || ',')\n          : value[valueField || 'value'];\n      }\n    } else {\n      value = typeof resetValue === 'undefined' ? '' : resetValue;\n    }\n\n    onChange((this.emitValue = value), undefined, changeImmediately);\n    this.syncAutoFill();\n  }\n\n  syncAutoFill() {\n    const {autoFill, multiple, onBulkChange} = this.props;\n    if (!isEmpty(autoFill)) {\n      const files = this.state.files.filter(\n        file => ~['uploaded', 'init', 'ready'].indexOf(file.state as string)\n      );\n      const toSync = dataMapping(\n        autoFill,\n        multiple\n          ? {\n              items: files\n            }\n          : files[0]\n      );\n      onBulkChange && onBulkChange(toSync);\n    }\n  }\n\n  async uploadFile(\n    file: FileX,\n    receiver: string,\n    params: object,\n    config: Partial<FileProps> = {},\n    onProgress: (progress: number) => void\n  ): Promise<Payload> {\n    const fd = new FormData();\n    const api = buildApi(receiver, createObject(config.data, params), {\n      method: 'post'\n    });\n\n    qsstringify({...api.data, ...params})\n      .split('&')\n      .filter(i => !!i)\n      .forEach(item => {\n        const parts = item.split('=');\n        fd.append(parts[0], decodeURIComponent(parts[1]));\n      });\n\n    // Note: File类型字段放在后面，可以支持第三方云存储鉴权\n    fd.append(config.fieldName || 'file', file);\n\n    try {\n      return await this._send(file, api, fd, {}, onProgress);\n    } finally {\n      this.removeFileCanelExecutor(file);\n    }\n  }\n\n  uploadBigFile(\n    file: FileX,\n    receiver: string,\n    params: object,\n    config: Partial<FileProps> = {},\n    onProgress: (progress: number) => void\n  ): Promise<Payload> {\n    const chunkSize = config.chunkSize || 5 * 1024 * 1024;\n    const self = this;\n    let startProgress = 0.2;\n    let endProgress = 0.9;\n    let progressArr: Array<number>;\n    const __ = this.props.translate;\n    const nameField = this.props.nameField || 'name';\n\n    interface ObjectState {\n      key: string;\n      uploadId: string;\n      loaded: number;\n      total: number;\n      [propName: string]: any;\n    }\n\n    interface Task {\n      file: File;\n      partNumber: number;\n      partSize: number;\n      start: number;\n      stop: number;\n      [propName: string]: any;\n    }\n\n    return new Promise((resolve, reject) => {\n      let state: ObjectState;\n      const startApi = buildApi(\n        config.startChunkApi!,\n        createObject(config.data, {\n          ...params,\n          filename: file.name,\n          [nameField]: file.name\n        }),\n        {\n          method: 'post',\n          autoAppend: true\n        }\n      );\n\n      self._send(file, startApi).then(startChunk).catch(reject);\n\n      function startChunk(ret: Payload) {\n        onProgress(startProgress);\n        const tasks = getTasks(file);\n        progressArr = tasks.map(() => 0);\n\n        if (!ret.data) {\n          throw new Error(__('File.uploadFailed'));\n        }\n\n        state = {\n          key: (ret.data as any).key,\n          uploadId: (ret.data as any).uploadId,\n          loaded: 0,\n          total: tasks.length\n        };\n\n        mapLimit(\n          tasks,\n          3,\n          uploadPartFile(state, config),\n          function (err: any, results: any) {\n            if (err) {\n              reject(err);\n            } else {\n              finishChunk(results, state);\n            }\n          }\n        );\n      }\n\n      function updateProgress(partNumber: number, progress: number) {\n        progressArr[partNumber - 1] = progress;\n        onProgress(\n          startProgress +\n            (endProgress - startProgress) *\n              (progressArr.reduce((count, progress) => count + progress, 0) /\n                progressArr.length)\n        );\n      }\n\n      async function finishChunk(\n        partList: Array<any> | undefined,\n        state: ObjectState\n      ) {\n        onProgress(endProgress);\n        const endApi = buildApi(\n          config.finishChunkApi!,\n          createObject(config.data, {\n            ...params,\n            uploadId: state.uploadId,\n            key: state.key,\n            [nameField]: file.name,\n            filename: file.name,\n            partList\n          }),\n          {\n            method: 'post',\n            autoAppend: true\n          }\n        );\n\n        try {\n          const ret = await self._send(file, endApi);\n          resolve(ret);\n        } catch (err) {\n          reject(err);\n        } finally {\n          self.removeFileCanelExecutor(file);\n        }\n      }\n\n      function uploadPartFile(state: ObjectState, conf: Partial<FileProps>) {\n        return (task: Task, callback: (error: any, value?: any) => void) => {\n          const api = buildApi(\n            conf.chunkApi!,\n            createObject(config.data, params),\n            {\n              method: 'post'\n            }\n          );\n\n          const fd = new FormData();\n          let blob = task.file.slice(task.start, task.stop + 1);\n\n          qsstringify({...api.data, ...params})\n            .split('&')\n            .forEach(item => {\n              const parts = item.split('=');\n              fd.append(parts[0], decodeURIComponent(parts[1]));\n            });\n\n          fd.append('key', state.key);\n          fd.append('uploadId', state.uploadId);\n          fd.append('partNumber', task.partNumber.toString());\n          fd.append('partSize', task.partSize.toString());\n\n          // Note: File类型字段放在后面，可以支持第三方云存储鉴权\n          fd.append(config.fieldName || 'file', blob, file.name);\n\n          return self\n            ._send(file, api, fd, {}, progress =>\n              updateProgress(task.partNumber, progress)\n            )\n            .then(ret => {\n              state.loaded++;\n              callback(null, {\n                partNumber: task.partNumber,\n                eTag: (ret.data as any).eTag\n              });\n            })\n            .catch(callback);\n        };\n      }\n\n      function getTasks(file: FileX): Array<Task> {\n        let leftSize = file.size;\n        let offset = 0;\n        let partNumber = 1;\n\n        let tasks: Array<Task> = [];\n\n        while (leftSize > 0) {\n          let partSize = Math.min(leftSize, chunkSize);\n          tasks.push({\n            file: file,\n            partNumber: partNumber,\n            partSize: partSize,\n            start: offset,\n            stop: offset + partSize - 1\n          });\n\n          leftSize -= partSize;\n          offset += partSize;\n          partNumber += 1;\n        }\n\n        return tasks;\n      }\n    });\n  }\n\n  _send(\n    file: FileX,\n    api: ApiObject | ApiString,\n    data?: any,\n    options?: object,\n    onProgress?: (progress: number) => void\n  ): Promise<Payload> {\n    const env = this.props.env;\n\n    if (!env || !env.fetcher) {\n      throw new Error('fetcher is required');\n    }\n\n    return env.fetcher(api, data, {\n      method: 'post',\n      ...options,\n      withCredentials: true,\n      cancelExecutor: (cancelExecutor: () => void) => {\n        // 记录取消器，取消的时候要调用\n        this.fileUploadCancelExecutors.push({\n          file: file,\n          executor: cancelExecutor\n        });\n      },\n      onUploadProgress: onProgress\n        ? (event: {loaded: number; total: number}) =>\n            onProgress(event.loaded / event.total)\n        : undefined\n    });\n  }\n\n  removeFileCanelExecutor(file: any, execute = false) {\n    this.fileUploadCancelExecutors = this.fileUploadCancelExecutors.filter(\n      item => {\n        if (execute && item.file === file) {\n          item.executor();\n        }\n\n        return item.file !== file;\n      }\n    );\n  }\n\n  validate(): any {\n    const __ = this.props.translate;\n\n    if (\n      this.state.uploading ||\n      this.state.files.some(item => item.state === 'pending')\n    ) {\n      return new Promise(resolve => {\n        this.resolve = resolve;\n        this.startUpload();\n      });\n    } else if (this.state.files.some(item => item.state === 'error')) {\n      return __('File.errorRetry');\n    }\n  }\n\n  render() {\n    const {\n      btnLabel,\n      accept,\n      disabled,\n      maxLength,\n      multiple,\n      autoUpload,\n      description,\n      hideUploadButton,\n      className,\n      btnClassName,\n      btnUploadClassName,\n      classnames: cx,\n      translate: __,\n      render,\n      downloadUrl\n    } = this.props;\n    let {files, uploading, error} = this.state;\n    const nameField = this.props.nameField || 'name';\n    const valueField = this.props.valueField || 'value';\n    const urlField = this.props.urlField || 'url';\n\n    const hasPending = files.some(file => file.state == 'pending');\n\n    let uploaded = 0;\n    let failed = 0;\n\n    this.state.uploading ||\n      this.state.files.forEach(item => {\n        if (item.state === 'error') {\n          failed++;\n        } else if (item.state === 'uploaded') {\n          uploaded++;\n        }\n      });\n\n    return (\n      <div className={cx('FileControl', className)}>\n        <DropZone\n          disabled={disabled}\n          key=\"drop-zone\"\n          ref={this.dropzone}\n          onDrop={this.handleDrop}\n          onDropRejected={this.handleDropRejected}\n          accept={accept === '*' ? '' : accept}\n          multiple={multiple}\n        >\n          {({getRootProps, getInputProps, isDragActive}) => (\n            <div\n              {...getRootProps({\n                onClick: preventEvent\n              })}\n              className={cx('FileControl-dropzone', {\n                disabled,\n                'is-empty': !files.length,\n                'is-active': isDragActive\n              })}\n            >\n              <input disabled={disabled} {...getInputProps()} />\n\n              {isDragActive ? (\n                <div className={cx('FileControl-acceptTip')}>\n                  {__('File.dragDrop')}\n                </div>\n              ) : (\n                <>\n                  {(multiple && (!maxLength || files.length < maxLength)) ||\n                  !multiple ? (\n                    <Button\n                      level=\"default\"\n                      disabled={disabled}\n                      className={cx('FileControl-selectBtn', btnClassName)}\n                      onClick={this.handleSelect}\n                    >\n                      <Icon icon=\"upload\" className=\"icon\" />\n                      {!multiple && files.length\n                        ? __('File.repick')\n                        : multiple && files.length\n                        ? __('File.continueAdd')\n                        : btnLabel\n                        ? btnLabel\n                        : __('File.upload')}\n                    </Button>\n                  ) : null}\n\n                  {description\n                    ? render('desc', description!, {\n                        className: cx('FileControl-description')\n                      })\n                    : null}\n\n                  {Array.isArray(files) ? (\n                    <ul className={cx('FileControl-list')}>\n                      {files.map((file, index) => (\n                        <li key={file.id}>\n                          <div\n                            className={cx('FileControl-itemInfo', {\n                              'is-invalid':\n                                file.state === 'invalid' ||\n                                file.state === 'error'\n                            })}\n                          >\n                            <Icon icon=\"file\" className=\"icon\" />\n                            {(file as FileValue)[urlField] ||\n                            (file as FileValue)[valueField] ||\n                            downloadUrl ? (\n                              <a\n                                className={cx('FileControl-itemInfoText')}\n                                target=\"_blank\"\n                                rel=\"noopener\"\n                                href=\"#\"\n                                onClick={this.handleClickFile.bind(this, file)}\n                              >\n                                {file[nameField as keyof typeof file] ||\n                                  (file as FileValue).filename}\n                              </a>\n                            ) : (\n                              <span className={cx('FileControl-itemInfoText')}>\n                                {file[nameField as keyof typeof file] ||\n                                  (file as FileValue).filename}\n                              </span>\n                            )}\n\n                            {file.state === 'invalid' ||\n                            file.state === 'error' ? (\n                              <>\n                                <Icon icon=\"fail\" className=\"icon\" />\n                                <span className=\"text-danger\">\n                                  {(file as FileValue).error || null}\n                                </span>\n                              </>\n                            ) : null}\n                            {!disabled ? (\n                              <a\n                                data-tooltip={__('Select.clear')}\n                                className={cx('FileControl-clear')}\n                                onClick={() => this.removeFile(file, index)}\n                              >\n                                <Icon icon=\"close\" className=\"icon\" />\n                              </a>\n                            ) : null}\n                          </div>\n                          {file.state === 'uploading' ||\n                          file.state === 'uploaded' ? (\n                            <div className={cx('FileControl-progressInfo')}>\n                              <div className={cx('FileControl-progress')}>\n                                <span\n                                  style={{\n                                    width: `${\n                                      file.state === 'uploaded'\n                                        ? 100\n                                        : (file.progress || 0) * 100\n                                    }%`\n                                  }}\n                                />\n                              </div>\n\n                              {file.state === 'uploaded' ? (\n                                <Icon icon=\"success\" className=\"icon\" />\n                              ) : (\n                                <span>\n                                  {Math.round((file.progress || 0) * 100)}%\n                                </span>\n                              )}\n                            </div>\n                          ) : null}\n                        </li>\n                      ))}\n                    </ul>\n                  ) : null}\n                </>\n              )}\n            </div>\n          )}\n        </DropZone>\n\n        {failed ? (\n          <div className={cx('FileControl-sum')}>\n            {__('File.result', {\n              uploaded,\n              failed\n            })}\n            <a onClick={this.retry}>{__('File.retry')}</a>\n            {__('File.failed')}\n          </div>\n        ) : null}\n\n        {!autoUpload && !hideUploadButton && files.length ? (\n          <Button\n            level=\"default\"\n            disabled={!hasPending}\n            className={cx('FileControl-uploadBtn', btnUploadClassName)}\n            onClick={this.toggleUpload}\n          >\n            {__(uploading ? 'File.pause' : 'File.start')}\n          </Button>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'input-file',\n  sizeMutable: false,\n  renderDescription: false\n})\nexport class FileControlRenderer extends FileControl {}\n"
    ]
}