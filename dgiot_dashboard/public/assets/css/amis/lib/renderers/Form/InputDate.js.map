{
    "version": 3,
    "file": "InputDate.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputDate.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport {filterDate} from '../../utils/tpl-builtin';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport DatePicker from '../../components/DatePicker';\n\nexport interface InputDateBaseControlSchema extends FormBaseControl {\n  /**\n   * 指定为日期选择控件\n   */\n  type:\n    | 'input-date'\n    | 'input-datetime'\n    | 'input-time'\n    | 'input-month'\n    | 'input-quarter'\n    | 'input-year';\n\n  /**\n   * 是否显示清除按钮\n   */\n  clearable?: boolean;\n\n  /**\n   * 日期存储格式\n   */\n  format?: string;\n\n  /**\n   * 日期展示格式\n   */\n  inputFormat?: string;\n\n  /**\n   * 设定是否存储 utc 时间。\n   */\n  utc?: boolean;\n\n  /**\n   * 是否为内联模式？\n   */\n  emebed?: boolean;\n\n  /**\n   * 边框模式，全边框，还是半边框，或者没边框。\n   */\n  borderMode?: 'full' | 'half' | 'none';\n}\n\n/**\n * Date日期选择控件\n * 文档：https://baidu.gitee.io/amis/docs/components/form/date\n */\nexport interface DateControlSchema extends InputDateBaseControlSchema {\n  /**\n   * 指定为日期选择控件\n   */\n  type: 'input-date';\n\n  /**\n   * 日期存储格式\n   * @default X\n   */\n  format?: string;\n\n  /**\n   * 日期展示格式\n   * @default YYYY-MM-DD\n   */\n  inputFormat?: string;\n\n  /**\n   * 点选日期后是否关闭弹窗\n   */\n  closeOnSelect?: boolean;\n\n  /**\n   * 限制最小日期\n   */\n  minDate?: string;\n\n  /**\n   * 限制最大日期\n   */\n  maxDate?: string;\n}\n\n/**\n * Datetime日期时间选择控件\n * 文档：https://baidu.gitee.io/amis/docs/components/form/datetime\n */\nexport interface DateTimeControlSchema extends InputDateBaseControlSchema {\n  /**\n   * 指定为日期时间选择控件\n   */\n  type: 'input-datetime';\n\n  /**\n   * 日期存储格式\n   * @default X\n   */\n  format?: string;\n\n  /**\n   * 日期展示格式\n   * @default YYYY-MM-DD HH:mm\n   */\n  inputFormat?: string;\n\n  /**\n   * 时间的格式。\n   *\n   * @default HH:mm\n   */\n  timeFormat?: string;\n\n  /**\n   * 限制最小日期\n   */\n  minDate?: string;\n\n  /**\n   * 限制最大日期\n   */\n  maxDate?: string;\n\n  /**\n   * 不记得了\n   */\n  timeConstraints?: any;\n}\n\n/**\n * Time 时间选择控件\n * 文档：https://baidu.gitee.io/amis/docs/components/form/time\n */\nexport interface TimeControlSchema extends InputDateBaseControlSchema {\n  /**\n   * 指定为日期时间选择控件\n   */\n  type: 'input-time';\n\n  /**\n   * 日期存储格式\n   * @default X\n   */\n  format?: string;\n\n  /**\n   * 日期展示格式\n   * @default YYYY-MM-DD HH:mm\n   */\n  inputFormat?: string;\n\n  /**\n   * 时间的格式。\n   *\n   * @default HH:mm\n   */\n  timeFormat?: string;\n\n  /**\n   * 不记得了\n   */\n  timeConstraints?: any;\n}\n\n/**\n * Month 月份选择控件\n * 文档：https://baidu.gitee.io/amis/docs/components/form/Month\n */\nexport interface MonthControlSchema extends InputDateBaseControlSchema {\n  /**\n   * 指定为月份时间选择控件\n   */\n  type: 'input-month';\n\n  /**\n   * 月份存储格式\n   * @default X\n   */\n  format?: string;\n\n  /**\n   * 月份展示格式\n   * @default YYYY-MM\n   */\n  inputFormat?: string;\n}\n\n/**\n * 季度选择控件\n */\nexport interface QuarterControlSchema extends InputDateBaseControlSchema {\n  /**\n   * 指定为月份时间选择控件\n   */\n  type: 'input-quarter';\n\n  /**\n   * 月份存储格式\n   * @default X\n   */\n  format?: string;\n\n  /**\n   * 月份展示格式\n   * @default YYYY-MM\n   */\n  inputFormat?: string;\n}\n\n/**\n * 年份选择控件\n */\nexport interface YearControlSchema extends InputDateBaseControlSchema {\n  /**\n   * 指定为月份时间选择控件\n   */\n  type: 'input-year';\n\n  /**\n   * 月份存储格式\n   * @default X\n   */\n  format?: string;\n\n  /**\n   * 月份展示格式\n   * @default YYYY-MM\n   */\n  inputFormat?: string;\n}\n\nexport interface DateProps extends FormControlProps {\n  inputFormat?: string;\n  timeFormat?: string;\n  format?: string;\n  valueFormat?: string;\n  timeConstraints?: {\n    hours?: {\n      min: number;\n      max: number;\n      step: number;\n    };\n    minutes?: {\n      min: number;\n      max: number;\n      step: number;\n    };\n    seconds: {\n      min: number;\n      max: number;\n      step: number;\n    };\n  };\n  closeOnSelect?: boolean;\n  disabled: boolean;\n  iconClassName?: string;\n  utc?: boolean; // 设定是否存储 utc 时间。\n  minDate?: string;\n  maxDate?: string;\n}\n\ninterface DateControlState {\n  minDate?: moment.Moment;\n  maxDate?: moment.Moment;\n}\n\nexport default class DateControl extends React.PureComponent<\n  DateProps,\n  DateControlState\n> {\n  static defaultProps = {\n    format: 'X',\n    viewMode: 'days',\n    inputFormat: 'YYYY-MM-DD',\n    timeConstraints: {\n      minutes: {\n        step: 1\n      }\n    },\n    clearable: true\n  };\n\n  constructor(props: DateProps) {\n    super(props);\n\n    const {\n      minDate,\n      maxDate,\n      value,\n      defaultValue,\n      setPrinstineValue,\n      data,\n      format,\n      utc\n    } = props;\n\n    if (defaultValue && value === defaultValue) {\n      const date = filterDate(defaultValue, data, format);\n      setPrinstineValue((utc ? moment.utc(date) : date).format(format));\n    }\n\n    this.state = {\n      minDate: minDate ? filterDate(minDate, data, format) : undefined,\n      maxDate: maxDate ? filterDate(maxDate, data, format) : undefined\n    };\n  }\n\n  componentDidUpdate(prevProps: DateProps) {\n    const props = this.props;\n\n    if (prevProps.defaultValue !== props.defaultValue) {\n      const date = filterDate(props.defaultValue, props.data, props.format);\n      props.setPrinstineValue(\n        (props.utc ? moment.utc(date) : date).format(props.format)\n      );\n    }\n\n    if (\n      prevProps.minDate !== props.minDate ||\n      prevProps.maxDate !== props.maxDate ||\n      prevProps.data !== props.data\n    ) {\n      this.setState({\n        minDate: props.minDate\n          ? filterDate(props.minDate, props.data, this.props.format)\n          : undefined,\n        maxDate: props.maxDate\n          ? filterDate(props.maxDate, props.data, this.props.format)\n          : undefined\n      });\n    }\n  }\n\n  render() {\n    let {\n      className,\n      defaultValue,\n      defaultData,\n      classnames: cx,\n      minDate,\n      maxDate,\n      type,\n      format,\n      timeFormat,\n      valueFormat,\n      ...rest\n    } = this.props;\n\n    if (type === 'time' && timeFormat) {\n      format = timeFormat;\n    }\n\n    return (\n      <div className={cx(`DateControl`, className)}>\n        <DatePicker\n          {...rest}\n          timeFormat={timeFormat}\n          format={valueFormat || format}\n          {...this.state}\n          classnames={cx}\n        />\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'input-date',\n  weight: -150\n})\nexport class DateControlRenderer extends DateControl {\n  static defaultProps = {\n    ...DateControl.defaultProps,\n    placeholder: 'Date.placeholder',\n    dateFormat: 'YYYY-MM-DD',\n    timeFormat: '',\n    strictMode: false\n  };\n}\n\n@FormItem({\n  type: 'input-datetime'\n})\nexport class DatetimeControlRenderer extends DateControl {\n  static defaultProps = {\n    ...DateControl.defaultProps,\n    placeholder: 'DateTime.placeholder',\n    inputFormat: 'YYYY-MM-DD HH:mm:ss',\n    dateFormat: 'LL',\n    timeFormat: 'HH:mm:ss',\n    closeOnSelect: false,\n    strictMode: false\n  };\n}\n\n@FormItem({\n  type: 'input-time'\n})\nexport class TimeControlRenderer extends DateControl {\n  static defaultProps = {\n    ...DateControl.defaultProps,\n    placeholder: 'Time.placeholder',\n    inputFormat: 'HH:mm',\n    dateFormat: '',\n    timeFormat: 'HH:mm',\n    viewMode: 'time',\n    closeOnSelect: false\n  };\n}\n\n@FormItem({\n  type: 'input-month'\n})\nexport class MonthControlRenderer extends DateControl {\n  static defaultProps = {\n    ...DateControl.defaultProps,\n    placeholder: 'Month.placeholder',\n    inputFormat: 'YYYY-MM',\n    dateFormat: 'MM',\n    timeFormat: '',\n    viewMode: 'months',\n    closeOnSelect: true\n  };\n}\n\n@FormItem({\n  type: 'input-quarter'\n})\nexport class QuarterControlRenderer extends DateControl {\n  static defaultProps = {\n    ...DateControl.defaultProps,\n    placeholder: 'Quarter.placeholder',\n    inputFormat: 'YYYY [Q]Q',\n    dateFormat: 'YYYY [Q]Q',\n    timeFormat: '',\n    viewMode: 'quarters',\n    closeOnSelect: true\n  };\n}\n\n@FormItem({\n  type: 'input-year'\n})\nexport class YearControlRenderer extends DateControl {\n  static defaultProps = {\n    ...DateControl.defaultProps,\n    placeholder: 'Year.placeholder',\n    inputFormat: 'YYYY',\n    dateFormat: 'YYYY',\n    timeFormat: '',\n    viewMode: 'years',\n    closeOnSelect: true\n  };\n}\n"
    ]
}