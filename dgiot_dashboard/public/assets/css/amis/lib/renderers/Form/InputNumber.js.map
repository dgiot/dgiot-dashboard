{
    "version": 3,
    "file": "InputNumber.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/InputNumber.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport cx from 'classnames';\nimport {filter} from '../../utils/tpl';\nimport NumberInput from '../../components/NumberInput';\nimport {FormOptionsControl} from './Options';\nimport Select, {normalizeOptions, Option} from '../../components/Select';\nimport {PlainObject} from '../../types';\n/**\n * 数字输入框\n * 文档：https://baidu.gitee.io/amis/docs/components/form/number\n */\nexport interface NumberControlSchema extends FormBaseControl {\n  type: 'input-number';\n\n  /**\n   * 最大值\n   */\n  max?: number;\n\n  /**\n   * 最小值\n   */\n  min?: number;\n\n  /**\n   * 步长\n   */\n  step?: number;\n\n  /**\n   * 精度\n   */\n  precision?: number;\n\n  /**\n   * 默认当然是\n   */\n  showSteps?: boolean;\n  /**\n   * 边框模式，全边框，还是半边框，或者没边框。\n   */\n  borderMode?: 'full' | 'half' | 'none';\n  /**\n   * 前缀\n   */\n  prefix?: string;\n  /**\n   * 后缀\n   */\n  suffix?: string;\n\n  /**\n   * 单位列表\n   */\n  unitOptions?: string | Array<Option> | string[] | PlainObject;\n\n  /**\n   * 是否千分分隔\n   */\n  kilobitSeparator?: boolean;\n  /**\n   * 只读\n   */\n  readOnly?: boolean;\n}\n\nexport interface NumberProps extends FormControlProps {\n  placeholder?: string;\n  max?: number | string;\n  min?: number | string;\n  step?: number;\n  precision?: number;\n  /**\n   * 边框模式，全边框，还是半边框，或者没边框。\n   */\n  borderMode?: 'full' | 'half' | 'none';\n  /**\n   * 前缀\n   */\n  prefix?: string;\n  /**\n   * 后缀\n   */\n  suffix?: string;\n  /**\n   * 是否千分分隔\n   */\n  kilobitSeparator?: boolean;\n  /**\n   * 只读\n   */\n  readOnly?: boolean;\n}\n\ninterface NumberState {\n  // 数字单位，将会影响输出\n  unit?: string;\n  unitOptions?: Option[];\n}\n\nexport default class NumberControl extends React.Component<\n  NumberProps,\n  NumberState\n> {\n  static defaultProps: Partial<NumberProps> = {\n    step: 1,\n    resetValue: ''\n  };\n\n  constructor(props: NumberProps) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeUnit = this.handleChangeUnit.bind(this);\n    const unit = this.getUnit();\n    const unitOptions = normalizeOptions(props.unitOptions);\n    this.state = {unit, unitOptions};\n  }\n\n  // 解析出单位\n  getUnit() {\n    const props = this.props;\n    if (props.unitOptions && props.unitOptions.length) {\n      const optionValues = normalizeOptions(props.unitOptions).map(\n        option => option.value\n      );\n      // 如果有值就解析出来作为单位\n      if (props.value && typeof props.value === 'string') {\n        let unit = optionValues[0];\n        // 先找长的字符，这样如果有 ab 和 b 两种后缀相同的也能识别\n        optionValues.sort((a, b) => b.length - a.length);\n        for (const optionValue of optionValues) {\n          if (props.value.endsWith(optionValue)) {\n            unit = optionValue;\n            break;\n          }\n        }\n        return unit;\n      } else {\n        // 没有值就使用第一个单位\n        return optionValues[0];\n      }\n    }\n    return undefined;\n  }\n\n  handleChange(inputValue: any) {\n    const {classPrefix: ns, onChange, resetValue, unitOptions} = this.props;\n\n    if (inputValue && typeof inputValue !== 'number') {\n      return;\n    }\n\n    if (inputValue !== null && unitOptions && this.state.unit) {\n      inputValue = inputValue + this.state.unit;\n    }\n\n    onChange(inputValue === null ? resetValue ?? null : inputValue);\n  }\n\n  filterNum(value: number | string | undefined) {\n    if (typeof value !== 'number') {\n      value = filter(value, this.props.data);\n      value = /^[-]?\\d+/.test(value) ? +value : undefined;\n    }\n    return value;\n  }\n\n  // 单位选项的变更\n  handleChangeUnit(option: Option) {\n    let value = this.props.value;\n    const prevUnitValue = this.state.unit;\n    this.setState({unit: option.value}, () => {\n      if (value) {\n        value = value.replace(prevUnitValue, '');\n        this.props.onChange(value + this.state.unit);\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps: NumberProps) {\n    if (this.props.value !== prevProps.value) {\n      const unit = this.getUnit();\n      this.setState({unit: unit});\n    }\n    if (this.props.unitOptions !== prevProps.unitOptions) {\n      this.setState({unitOptions: normalizeOptions(this.props.unitOptions)});\n    }\n  }\n\n  render(): JSX.Element {\n    const {\n      className,\n      classPrefix: ns,\n      value,\n      step,\n      precision,\n      max,\n      min,\n      disabled,\n      placeholder,\n      showSteps,\n      borderMode,\n      suffix,\n      prefix,\n      kilobitSeparator,\n      unitOptions,\n      readOnly\n    } = this.props;\n\n    let precisionProps: any = {};\n\n    const finalPrecision = this.filterNum(precision);\n    if (typeof finalPrecision === 'number') {\n      precisionProps.precision = finalPrecision;\n    }\n\n    const unit = this.state?.unit;\n    // 数据格式化\n    const formatter = (value: string | number) => {\n      // 增加千分分隔\n      if (kilobitSeparator && value) {\n        value = (value + '').replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n      }\n      return (prefix ? prefix : '') + value + (suffix ? suffix : '');\n    };\n    // 将数字还原\n    const parser = (value: string) => {\n      if (value) {\n        prefix && (value = value.replace(prefix, ''));\n        suffix && (value = value.replace(suffix, ''));\n        kilobitSeparator && (value = value.replace(/,/g, ''));\n      }\n      return value;\n    };\n\n    const finalValue =\n      unit && value && typeof value === 'string'\n        ? value.replace(unit, '')\n        : value;\n\n    return (\n      <div\n        className={cx(\n          `${ns}NumberControl`,\n          {\n            [`${ns}NumberControl--withUnit`]: unitOptions\n          },\n          className\n        )}\n      >\n        <NumberInput\n          value={finalValue}\n          step={step}\n          max={this.filterNum(max)}\n          min={this.filterNum(min)}\n          formatter={formatter}\n          parser={parser}\n          onChange={this.handleChange}\n          disabled={disabled}\n          placeholder={placeholder}\n          precision={finalPrecision}\n          showSteps={showSteps}\n          borderMode={borderMode}\n          readOnly={readOnly}\n        />\n        {unitOptions ? (\n          <Select\n            value={unit}\n            clearable={false}\n            options={this.state.unitOptions || []}\n            onChange={this.handleChangeUnit}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\n@FormItem({\n  type: 'input-number'\n})\nexport class NumberControlRenderer extends NumberControl {\n  static defaultProps: Partial<FormControlProps> = {\n    validations: 'isNumeric',\n    ...NumberControl.defaultProps\n  };\n}\n"
    ]
}