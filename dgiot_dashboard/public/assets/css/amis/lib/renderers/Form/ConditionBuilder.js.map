{
    "version": 3,
    "file": "ConditionBuilder.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Form/ConditionBuilder.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,+BAAmE;AAGnE,gGAAwE;AAExE,sEAG2C;AAwC3C;IAAqD,wDAA0C;IAA/F;;IAUA,CAAC;IATC,wCAAM,GAAN;QACE,IAAM,KAAuC,IAAI,CAAC,KAAK,EAAhD,SAAS,eAAA,EAAc,EAAE,gBAAA,EAAK,IAAI,2BAAnC,2BAAoC,CAAa,CAAC;QAExD,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,yBAAyB,EAAE,SAAS,CAAC;YACtD,8BAAC,iCAAiC,4BAAK,IAAI,EAAI,CAC3C,CACP,CAAC;IACJ,CAAC;IACH,8BAAC;AAAD,CAAC,AAVD,CAAqD,eAAK,CAAC,aAAa,GAUvE;;AAED,IAAM,iCAAiC,GAAG,IAAA,mCAAgB,EAAC;IACzD,OAAO,EAAE,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,MAAM,IAAI,IAAI,EAAnB,CAAmB;CACrC,CAAC;IACc,wCAEb;IAFD;;IAaA,CAAC;IAVC,wBAAM,GAAN;QACE,IAAM,KAAwC,IAAI,CAAC,KAAK,EAAjD,OAAO,aAAA,EAAE,MAAM,YAAA,EAAE,SAAS,eAAA,EAAK,IAAI,2BAApC,kCAAqC,CAAa,CAAC;QACzD,OAAO,CACL,8BAAC,eAAgB,4BACX,IAAI,IACR,MAAM,EAAE,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,EACnC,QAAQ,EAAE,OAAO,IACjB,CACH,CAAC;IACJ,CAAC;IACH,cAAC;AAAD,CAAC,AAbD,CAAc,eAAK,CAAC,SAAS,GAc9B,CAAC;AAMF;IAA8C,yDAAuB;IAArE;;IAAuE,CAAC;IAA3D,wBAAwB;QAJpC,IAAA,eAAQ,EAAC;YACR,IAAI,EAAE,mBAAmB;YACzB,UAAU,EAAE,KAAK;SAClB,CAAC;OACW,wBAAwB,CAAmC;IAAD,+BAAC;CAAA,AAAxE,CAA8C,uBAAuB,GAAG;AAA3D,4DAAwB",
    "sourcesContent": [
        "import React from 'react';\nimport {FormItem, FormControlProps, FormBaseControl} from './Item';\nimport {Funcs, Fields} from '../../components/condition-builder/types';\nimport {Config} from '../../components/condition-builder/config';\nimport ConditionBuilder from '../../components/condition-builder/index';\nimport {SchemaApi, SchemaTokenizeableString} from '../../Schema';\nimport {\n  RemoteOptionsProps,\n  withRemoteConfig\n} from '../../components/WithRemoteConfig';\n\n/**\n * 条件组合控件\n * 文档：https://baidu.gitee.io/amis/docs/components/form/condition-builder\n */\nexport interface ConditionBuilderControlSchema extends FormBaseControl {\n  /**\n   * 指定为\n   */\n  type: 'condition-builder';\n\n  /**\n   * 函数集合\n   */\n  funcs?: Funcs;\n\n  /**\n   * 字段集合\n   */\n  fields: Fields;\n\n  /**\n   * 其他配置\n   */\n  config?: Config;\n\n  /**\n   * 通过远程拉取配置项\n   */\n  source?: SchemaApi | SchemaTokenizeableString;\n}\n\nexport interface ConditionBuilderProps\n  extends FormControlProps,\n    Omit<\n      ConditionBuilderControlSchema,\n      'type' | 'className' | 'descriptionClassName' | 'inputClassName'\n    > {}\n\nexport default class ConditionBuilderControl extends React.PureComponent<ConditionBuilderProps> {\n  render() {\n    const {className, classnames: cx, ...rest} = this.props;\n\n    return (\n      <div className={cx(`ConditionBuilderControl`, className)}>\n        <ConditionBuilderWithRemoteOptions {...rest} />\n      </div>\n    );\n  }\n}\n\nconst ConditionBuilderWithRemoteOptions = withRemoteConfig({\n  adaptor: data => data.fields || data\n})(\n  class extends React.Component<\n    RemoteOptionsProps & React.ComponentProps<typeof ConditionBuilder>\n  > {\n    render() {\n      const {loading, config, deferLoad, ...rest} = this.props;\n      return (\n        <ConditionBuilder\n          {...rest}\n          fields={config || rest.fields || []}\n          disabled={loading}\n        />\n      );\n    }\n  }\n);\n\n@FormItem({\n  type: 'condition-builder',\n  strictMode: false\n})\nexport class ConditionBuilderRenderer extends ConditionBuilderControl {}\n"
    ]
}