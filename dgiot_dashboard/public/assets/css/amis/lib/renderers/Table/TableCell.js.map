{
    "version": 3,
    "file": "TableCell.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Table/TableCell.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,yCAAsD;AACtD,wEAAqC;AACrC,sEAAmC;AACnC,oEAAqC;AACrC,yCAAoC;AACpC,kCAAqC;AACrC,uCAAuC;AAMvC;IAA+B,0CAA8B;IAA7D;;IAmHA,CAAC;IApGC,0BAAM,GAAN;QACE,IAAI,KAyBA,IAAI,CAAC,KAAK,EAxBA,EAAE,gBAAA,EACd,SAAS,eAAA,EACT,aAAa,mBAAA,EACb,MAAM,YAAA,EACN,KAAK,WAAA,EACa,SAAS,sBAAA,EAC3B,MAAM,YAAA,EACN,KAAK,WAAA,EACL,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,KAAK,WAAA,EACL,cAAc,oBAAA,EACd,KAAK,WAAA,EACL,QAAQ,cAAA,EACR,OAAO,aAAA,EACP,OAAO,aAAA,EACD,KAAK,UAAA,EACX,GAAG,SAAA,EACH,MAAM,YAAA,EACN,MAAM,YAAA,EACN,KAAK,WAAA,EACL,MAAM,YAAA,EACH,IAAI,2BAxBL,+PAyBH,CAAa,CAAC;QAEf,IAAM,MAAM,mDACP,MAAM,KACT,SAAS,EAAE,cAAc,EACzB,IAAI,EAAE,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,OAAO,GACzC,CAAC;QAEF,wCAAwC;QACxC,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,iBAAiB,EAAE;YACjE,OAAO,MAAM,CAAC,KAAK,CAAC;SACrB;QAED,IAAI,IAAI,GAAG,QAAQ;YACjB,CAAC,CAAC,QAAQ;YACV,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,kDACjB,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAClC,SAAS,EAAE,IAAI,EACf,KAAK,OAAA,EACL,IAAI,MAAA,IACJ,CAAC;QAEP,IAAI,KAAK,EAAE;YACT,KAAK,mDACA,KAAK,KACR,KAAK,EAAE,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,GACvC,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;gBACnC,IAAI,GAAG,CACL,uCAAK,KAAK,EAAE,EAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAC;oBAC7B,MAAM;oBACN,IAAI;oBACJ,KAAK,CACF,CACP,CAAC;gBACF,MAAM,GAAG,IAAI,CAAC;gBACd,KAAK,GAAG,IAAI,CAAC;gBACb,sBAAsB;aACvB;SACF;QAED,IAAI,KAAK,EAAE;YACT,KAAK,mDACA,KAAK,KACR,SAAS,EAAE,KAAK,GACjB,CAAC;SACH;QAED,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,IAAmB,CAAC;SAC5B;QAED,IAAI,MAAM,EAAE;YACV,SAAS,GAAG,IAAI,CAAC;SAClB;QAED,OAAO,CACL,8BAAC,SAAS,IACR,OAAO,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAC1C,KAAK,EAAE,KAAK,EACZ,SAAS,EAAE,EAAE,CACX,SAAS,EACT,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,IAAA,YAAM,EAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CACjE,EACD,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO;YAEf,MAAM;YACN,IAAI;YACJ,KAAK,CACI,CACb,CAAC;IACJ,CAAC;IAjHM,sBAAY,GAAG;QACpB,gBAAgB,EAAE,IAAI;KACvB,CAAC;IAEK,mBAAS,GAAkB;QAChC,MAAM;QACN,OAAO;QACP,QAAQ;QACR,MAAM;QACN,KAAK;QACL,SAAS;QACT,QAAQ;KACT,CAAC;IAsGJ,gBAAC;CAAA,AAnHD,CAA+B,eAAK,CAAC,SAAS,GAmH7C;AAnHY,8BAAS;AA+HtB;IAAuC,kDAAS;IAAhD;;IASA,CAAC;IARQ,2BAAS;QACd,WAAW;QACX,oBAAoB;QACpB,SAAS;QACT,UAAU;QACV,QAAQ;OACL,SAAS,CAAC,SAAS,QACtB;IARS,iBAAiB;QAV7B,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,6BAA6B;YACnC,IAAI,EAAE,YAAY;SACnB,CAAC;QACD,IAAA,mBAAS,GAAE;QACX,IAAA,iBAAW,EAAC;YACX,YAAY,EAAE,IAAI;SACnB,CAAC;QACD,IAAA,kBAAQ,GAAE;QACV,qBAAQ;OACI,iBAAiB,CAS7B;IAAD,wBAAC;CAAA,AATD,CAAuC,SAAS,GAS/C;AATY,8CAAiB;AAiB9B;IAAmC,8CAAS;IAA5C;;IAKA,CAAC;IAJQ,0BAAY,mDACd,SAAS,CAAC,YAAY,KACzB,gBAAgB,EAAE,KAAK,IACvB;IAJS,aAAa;QANzB,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,OAAO;SACd,CAAC;QACD,IAAA,iBAAW,GAAE;QACb,IAAA,kBAAQ,GAAE;OACE,aAAa,CAKzB;IAAD,oBAAC;CAAA,AALD,CAAmC,SAAS,GAK3C;AALY,sCAAa",
    "sourcesContent": [
        "import React from 'react';\nimport {RendererProps, Renderer} from '../../factory';\nimport QuickEdit from '../QuickEdit';\nimport Copyable from '../Copyable';\nimport PopOverable from '../PopOver';\nimport {observer} from 'mobx-react';\nimport omit = require('lodash/omit');\nimport {filter} from '../../utils/tpl';\n\nexport interface TableCellProps extends RendererProps {\n  wrapperComponent?: React.ReactType;\n  column: object;\n}\nexport class TableCell extends React.Component<RendererProps> {\n  static defaultProps = {\n    wrapperComponent: 'td'\n  };\n\n  static propsList: Array<string> = [\n    'type',\n    'label',\n    'column',\n    'body',\n    'tpl',\n    'rowSpan',\n    'remark'\n  ];\n\n  render() {\n    let {\n      classnames: cx,\n      className,\n      classNameExpr,\n      render,\n      style,\n      wrapperComponent: Component,\n      column,\n      value,\n      data,\n      children,\n      width,\n      align,\n      innerClassName,\n      label,\n      tabIndex,\n      onKeyUp,\n      rowSpan,\n      body: _body,\n      tpl,\n      remark,\n      prefix,\n      affix,\n      isHead,\n      ...rest\n    } = this.props;\n\n    const schema = {\n      ...column,\n      className: innerClassName,\n      type: (column && column.type) || 'plain'\n    };\n\n    // 如果本来就是 type 为 button，不要删除，其他情况下都应该删除。\n    if (schema.type !== 'button' && schema.type !== 'dropdown-button') {\n      delete schema.label;\n    }\n\n    let body = children\n      ? children\n      : render('field', schema, {\n          ...omit(rest, Object.keys(schema)),\n          inputOnly: true,\n          value,\n          data\n        });\n\n    if (width) {\n      style = {\n        ...style,\n        width: (style && style.width) || width\n      };\n\n      if (!/%$/.test(String(style.width))) {\n        body = (\n          <div style={{width: style.width}}>\n            {prefix}\n            {body}\n            {affix}\n          </div>\n        );\n        prefix = null;\n        affix = null;\n        // delete style.width;\n      }\n    }\n\n    if (align) {\n      style = {\n        ...style,\n        textAlign: align\n      };\n    }\n\n    if (!Component) {\n      return body as JSX.Element;\n    }\n\n    if (isHead) {\n      Component = 'th';\n    }\n\n    return (\n      <Component\n        rowSpan={rowSpan > 1 ? rowSpan : undefined}\n        style={style}\n        className={cx(\n          className,\n          column.classNameExpr ? filter(column.classNameExpr, data) : null\n        )}\n        tabIndex={tabIndex}\n        onKeyUp={onKeyUp}\n      >\n        {prefix}\n        {body}\n        {affix}\n      </Component>\n    );\n  }\n}\n\n@Renderer({\n  test: /(^|\\/)table\\/(?:.*\\/)?cell$/,\n  name: 'table-cell'\n})\n@QuickEdit()\n@PopOverable({\n  targetOutter: true\n})\n@Copyable()\n@observer\nexport class TableCellRenderer extends TableCell {\n  static propsList = [\n    'quickEdit',\n    'quickEditEnabledOn',\n    'popOver',\n    'copyable',\n    'inline',\n    ...TableCell.propsList\n  ];\n}\n\n@Renderer({\n  type: 'field',\n  name: 'field'\n})\n@PopOverable()\n@Copyable()\nexport class FieldRenderer extends TableCell {\n  static defaultProps = {\n    ...TableCell.defaultProps,\n    wrapperComponent: 'div'\n  };\n}\n"
    ]
}