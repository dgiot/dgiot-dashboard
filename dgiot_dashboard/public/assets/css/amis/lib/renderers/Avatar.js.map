{
    "version": 3,
    "file": "Avatar.js",
    "sourceRoot": "",
    "sources": [
        "/src/renderers/Avatar.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA;;GAEG;AACH,6DAA0B;AAC1B,sCAAmD;AAOnD,6CAA2D;AAC3D,oDAA+F;AAqE/F;IAAiC,4CAAoC;IAArE;;IAyDA,CAAC;IAxDC,4BAAM,GAAN;QACM,IAAA,KAYA,IAAI,CAAC,KAAK,EAXZ,SAAS,eAAA,EACT,YAAmB,EAAnB,IAAI,mBAAG,YAAY,KAAA,EACnB,IAAI,UAAA,EACJ,GAAG,SAAA,EACH,WAAa,EAAb,GAAG,mBAAG,OAAO,KAAA,EACb,IAAI,UAAA,EACJ,aAAgB,EAAhB,KAAK,mBAAG,QAAQ,KAAA,EAChB,YAAS,EAAT,IAAI,mBAAG,EAAE,KAAA,EACT,KAAK,WAAA,EACO,EAAE,gBAAA,EACd,KAAK,WACO,CAAC;QAEf,IAAI,SAAS,GAAG;YACd,MAAM,EAAE,IAAI;YACZ,KAAK,EAAE,IAAI;YACX,UAAU,EAAE,IAAI,GAAG,IAAI;SACxB,CAAC;QAEF,IAAI,IAAA,4BAAc,EAAC,IAAI,CAAC,EAAE;YACxB,IAAI,GAAG,IAAA,6BAAe,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACpC;QAED,IAAI,IAAA,4BAAc,EAAC,GAAG,CAAC,EAAE;YACvB,GAAG,GAAG,IAAA,6BAAe,EAAC,GAAG,EAAE,IAAI,CAAC,CAAC;SAClC;QAED,IAAI,IAAA,4BAAc,EAAC,IAAI,CAAC,EAAE;YACxB,IAAI,GAAG,IAAA,6BAAe,EAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACpC;QAED,IAAI,MAAM,GAAG,qCAAG,SAAS,EAAE,IAAI,GAAI,CAAC;QAEpC,IAAI,IAAI,EAAE;YACR,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;aAC3C;YACD,MAAM,GAAG,4CAAO,IAAI,CAAQ,CAAC;SAC9B;QAED,IAAI,GAAG,EAAE;YACP,MAAM,GAAG,uCAAK,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,GAAG,EAAC,GAAI,CAAC;SACrD;QAED,OAAO,CACL,6DACE,SAAS,EAAE,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,aAAW,KAAO,CAAC,EACtD,KAAK,kDAAM,SAAS,GAAK,KAAK,KAC1B,KAAK,GAER,MAAM,CACH,CACP,CAAC;IACJ,CAAC;IACH,kBAAC;AAAD,CAAC,AAzDD,CAAiC,eAAK,CAAC,SAAS,GAyD/C;AAzDY,kCAAW;AA+DxB;IAAyC,oDAAW;IAApD;;IAAsD,CAAC;IAA1C,mBAAmB;QAJ/B,IAAA,kBAAQ,EAAC;YACR,IAAI,EAAE,QAAQ;SACf,CAAC;QACD,iBAAS;OACG,mBAAmB,CAAuB;IAAD,0BAAC;CAAA,AAAvD,CAAyC,WAAW,GAAG;AAA1C,kDAAmB",
    "sourcesContent": [
        "/**\n * @file 用来展示用户头像\n */\nimport React from 'react';\nimport {Renderer, RendererProps} from '../factory';\nimport {\n  BaseSchema,\n  SchemaClassName,\n  SchemaIcon,\n  SchemaUrlPath\n} from '../Schema';\nimport {BadgeSchema, withBadge} from '../components/Badge';\nimport {isPureVariable, resolveVariable, resolveVariableAndFilter} from '../utils/tpl-builtin';\n\n/**\n * Avatar 用户头像显示\n * 文档：https://baidu.gitee.io/amis/docs/components/avatar\n */\nexport interface AvatarSchema extends BaseSchema {\n  /**\n   *  指定为用户头像控件\n   */\n  type: 'avatar';\n\n  /**\n   * 大小\n   */\n  size?: number;\n\n  /**\n   * 形状\n   */\n  shape?: 'circle' | 'square';\n\n  /**\n   * 图标\n   */\n  icon?: string;\n\n  /**\n   * 文本\n   */\n  text?: string;\n\n  /**\n   * 图片地址\n   */\n  src?: string;\n\n  /**\n   * 图片相对于容器的缩放方式\n   */\n  fit?: 'fill' | 'contain' | 'cover' | 'none' | 'scale-down';\n\n  /**\n   * 图片无法显示时的替换文字地址\n   */\n  alt?: string;\n\n  /**\n   * 类名\n   */\n  className?: SchemaClassName;\n\n  /**\n   * 自定义样式\n   */\n  style?: {\n    [propName: string]: any;\n  };\n\n  /**\n   * 角标\n   */\n  badge?: BadgeSchema;\n}\n\nexport interface AvatarProps\n  extends RendererProps,\n    Omit<AvatarSchema, 'type' | 'className'> {}\n\nexport class AvatarField extends React.Component<AvatarProps, object> {\n  render() {\n    let {\n      className,\n      icon = 'fa fa-user',\n      text,\n      src,\n      fit = 'cover',\n      data,\n      shape = 'circle',\n      size = 40,\n      style,\n      classnames: cx,\n      props\n    } = this.props;\n\n    let sizeStyle = {\n      height: size,\n      width: size,\n      lineHeight: size + 'px'\n    };\n\n    if (isPureVariable(text)) {\n      text = resolveVariable(text, data);\n    }\n\n    if (isPureVariable(src)) {\n      src = resolveVariable(src, data);\n    }\n\n    if (isPureVariable(icon)) {\n      icon = resolveVariable(icon, data);\n    }\n\n    let avatar = <i className={icon} />;\n\n    if (text) {\n      if (text.length > 2) {\n        text = text.substring(0, 2).toUpperCase();\n      }\n      avatar = <span>{text}</span>;\n    }\n\n    if (src) {\n      avatar = <img src={src} style={{objectFit: fit}} />;\n    }\n\n    return (\n      <div\n        className={cx('Avatar', className, `Avatar--${shape}`)}\n        style={{...sizeStyle, ...style}}\n        {...props}\n      >\n        {avatar}\n      </div>\n    );\n  }\n}\n\n@Renderer({\n  type: 'avatar'\n})\n@withBadge\nexport class AvatarFieldRenderer extends AvatarField {}\n"
    ]
}