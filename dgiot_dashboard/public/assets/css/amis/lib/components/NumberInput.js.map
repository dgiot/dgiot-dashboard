{
    "version": 3,
    "file": "NumberInput.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/NumberInput.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAAA,6DAA0B;AAC1B,aAAa;AACb,iFAA0C;AAC1C,kCAA+C;AAC/C,0CAAkD;AA8BlD;IAAiC,4CAAiC;IAAlE;;IAsEA,CAAC;IA9DC,kCAAY,GAAZ,UAAa,KAAU;QACf,IAAA,KAAuB,IAAI,CAAC,KAAK,EAAhC,GAAG,SAAA,EAAE,GAAG,SAAA,EAAE,QAAQ,cAAc,CAAC;QAExC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;gBAC3B,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aAC9B;YAED,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;gBAC3B,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aAC9B;SACF;QAED,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,KAAK,CAAC,CAAC;IACpB,CAAC;IAED,4BAAM,GAAN;;QACQ,IAAA,KAiBF,IAAI,CAAC,KAAK,EAhBZ,SAAS,eAAA,EACI,EAAE,iBAAA,EACH,EAAE,gBAAA,EACd,KAAK,WAAA,EACL,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,GAAG,SAAA,EACH,GAAG,SAAA,EACH,QAAQ,cAAA,EACR,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,SAAS,eAAA,EACT,MAAM,YAAA,EACN,UAAU,gBAAA,EACV,QAAQ,cACI,CAAC;QAEf,IAAI,cAAc,GAAQ,EAAE,CAAC;QAE7B,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;YACjC,cAAc,CAAC,SAAS,GAAG,SAAS,CAAC;SACtC;QAED,OAAO,CACL,8BAAC,yBAAW,0BACV,SAAS,EAAE,EAAE,CAAC,SAAS,EAAE,SAAS,KAAK,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;gBAC5D,GAAC,mBAAiB,IAAA,gBAAO,EAAC,UAAU,CAAG,IAAG,UAAU;oBACpD,EACF,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAK,EAAE,WAAQ,EACxB,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,EACV,GAAG,EAAE,GAAG,EACR,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,SAAS,EACpB,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,IAAI,CAAC,YAAY,EAC3B,QAAQ,EAAE,QAAQ,EAClB,WAAW,EAAE,WAAW,IACpB,cAAc,EAClB,CACH,CAAC;IACJ,CAAC;IApEM,wBAAY,GAA0D;QAC3E,IAAI,EAAE,CAAC;QACP,QAAQ,EAAE,KAAK;QACf,UAAU,EAAE,MAAM;KACnB,CAAC;IAGF;QADC,iBAAQ;;;;mDAeR;IAgDH,kBAAC;CAAA,AAtED,CAAiC,eAAK,CAAC,SAAS,GAsE/C;AAtEY,kCAAW;AAwExB,kBAAe,IAAA,iBAAS,EAAC,WAAW,CAAC,CAAC",
    "sourcesContent": [
        "import React from 'react';\n// @ts-ignore\nimport InputNumber from 'rc-input-number';\nimport {ThemeProps, themeable} from '../theme';\nimport {autobind, ucFirst} from '../utils/helper';\n\nexport interface NumberProps extends ThemeProps {\n  placeholder?: string;\n  max?: number;\n  min?: number;\n  step?: number;\n  showSteps?: boolean;\n  precision?: number;\n  disabled?: boolean;\n  /**\n   * 只读\n   */\n  readOnly?: boolean;\n  value?: number;\n  onChange?: (value: number) => void;\n  /**\n   * 边框模式，全边框，还是半边框，或者没边框。\n   */\n  borderMode?: 'full' | 'half' | 'none';\n  /**\n   * 指定输入框展示值的格式\n   */\n  formatter?: Function;\n  /**\n   * 指定从 formatter 里转换回数字的方式，和 formatter 搭配使用\n   */\n  parser?: Function;\n}\n\nexport class NumberInput extends React.Component<NumberProps, any> {\n  static defaultProps: Pick<NumberProps, 'step' | 'readOnly' | 'borderMode'> = {\n    step: 1,\n    readOnly: false,\n    borderMode: 'full'\n  };\n\n  @autobind\n  handleChange(value: any) {\n    const {min, max, onChange} = this.props;\n\n    if (typeof value === 'number') {\n      if (typeof min === 'number') {\n        value = Math.max(value, min);\n      }\n\n      if (typeof max === 'number') {\n        value = Math.min(value, max);\n      }\n    }\n\n    onChange?.(value);\n  }\n\n  render(): JSX.Element {\n    const {\n      className,\n      classPrefix: ns,\n      classnames: cx,\n      value,\n      step,\n      precision,\n      max,\n      min,\n      disabled,\n      placeholder,\n      onChange,\n      showSteps,\n      formatter,\n      parser,\n      borderMode,\n      readOnly\n    } = this.props;\n\n    let precisionProps: any = {};\n\n    if (typeof precision === 'number') {\n      precisionProps.precision = precision;\n    }\n\n    return (\n      <InputNumber\n        className={cx(className, showSteps === false ? 'no-steps' : '', {\n          [`Number--border${ucFirst(borderMode)}`]: borderMode\n        })}\n        readOnly={readOnly}\n        prefixCls={`${ns}Number`}\n        value={value}\n        step={step}\n        max={max}\n        min={min}\n        formatter={formatter}\n        parser={parser}\n        onChange={this.handleChange}\n        disabled={disabled}\n        placeholder={placeholder}\n        {...precisionProps}\n      />\n    );\n  }\n}\n\nexport default themeable(NumberInput);\n"
    ]
}