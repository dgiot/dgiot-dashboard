{
    "version": 3,
    "file": "DaysView.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/calendar/DaysView.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import moment from 'moment';\n// @ts-ignore\nimport DaysView from 'react-datetime/src/DaysView';\nimport React from 'react';\nimport Downshift from 'downshift';\nimport {LocaleProps, localeable} from '../../locale';\nimport {ClassNamesFn} from '../../theme';\n\ninterface CustomDaysViewProps extends LocaleProps {\n  classPrefix?: string;\n  prevIcon?: string;\n  nextIcon?: string;\n  viewDate: moment.Moment;\n  selectedDate: moment.Moment;\n  minDate: moment.Moment;\n  timeFormat: string;\n  requiredConfirm?: boolean;\n  isEndDate?: boolean;\n  renderDay?: Function;\n  onClose?: () => void;\n  onChange: (value: moment.Moment) => void;\n  setDateTimeState: (state: any) => void;\n  setTime: (type: string, amount: number) => void;\n  subtractTime: (\n    amount: number,\n    type: string,\n    toSelected?: moment.Moment\n  ) => () => void;\n  addTime: (\n    amount: number,\n    type: string,\n    toSelected?: moment.Moment\n  ) => () => void;\n  isValidDate?: (\n    currentDate: moment.Moment,\n    selected?: moment.Moment\n  ) => boolean;\n  showView: (view: string) => () => void;\n  updateSelectedDate: (event: React.MouseEvent<any>, close?: boolean) => void;\n  handleClickOutside: () => void;\n  classnames: ClassNamesFn;\n}\n\nexport class CustomDaysView extends DaysView {\n  props: CustomDaysViewProps;\n  getDaysOfWeek: (locale: any) => any;\n  renderDays: () => JSX.Element;\n\n  updateSelectedDate = (event: React.MouseEvent<any>) => {\n    // need confirm\n    if (this.props.requiredConfirm) {\n      const viewDate = this.props.viewDate.clone();\n      const currentDate = this.props.selectedDate || viewDate;\n\n      const target = event.target as HTMLElement;\n      let modifier = 0;\n\n      if (~target.className.indexOf('rdtNew')) {\n        modifier = 1;\n      }\n      if (~target.className.indexOf('rdtOld')) {\n        modifier = -1;\n      }\n\n      viewDate\n        .month(viewDate.month() + modifier)\n        .date(parseInt(target.getAttribute('data-value') as string, 10))\n        .hours(currentDate.hours())\n        .minutes(currentDate.minutes())\n        .seconds(currentDate.seconds())\n        .milliseconds(currentDate.milliseconds());\n\n      this.props.setDateTimeState({\n        viewDate,\n        selectedDate: viewDate.clone()\n      });\n      return;\n    }\n\n    this.props.updateSelectedDate(event, true);\n  };\n\n  setTime = (\n    type: 'hours' | 'minutes' | 'seconds' | 'milliseconds',\n    value: number\n  ) => {\n    const date = (this.props.selectedDate || this.props.viewDate).clone();\n    date[type](value);\n\n    this.props.setDateTimeState({\n      viewDate: date.clone(),\n      selectedDate: date.clone()\n    });\n\n    if (!this.props.requiredConfirm) {\n      this.props.onChange(date);\n    }\n  };\n\n  confirm = () => {\n    let date = (this.props.selectedDate || this.props.viewDate).clone();\n\n    // 如果 minDate 是可用的，且比当前日期晚，则用 minDate\n    if (this.props.minDate?.isValid() && this.props.minDate?.isAfter(date)) {\n      date = this.props.minDate.clone();\n    }\n\n    this.props.setDateTimeState({\n      selectedDate: date\n    });\n    this.props.onChange(date);\n    this.props.onClose && this.props.onClose();\n  };\n\n  cancel = () => {\n    this.props.onClose && this.props.onClose();\n  };\n\n  renderDay = (props: any, currentDate: moment.Moment) => {\n    return <td {...props}>{currentDate.date()}</td>;\n  };\n\n  computedTimeOptions(total: number) {\n    const times: {label: string; value: string}[] = [];\n\n    for (let t = 0; t < total; t++) {\n      const label = t < 10 ? `0${t}` : `${t}`;\n      times.push({label, value: label});\n    }\n\n    return times;\n  }\n\n  renderTimes = () => {\n    const {\n      timeFormat,\n      selectedDate,\n      viewDate,\n      isEndDate,\n      classnames: cx\n    } = this.props;\n\n    const date = selectedDate || (isEndDate ? viewDate.endOf('day') : viewDate);\n    const inputs: Array<React.ReactNode> = [];\n\n    timeFormat.split(':').forEach((format, i) => {\n      const type = /h/i.test(format)\n        ? 'hours'\n        : /m/.test(format)\n        ? 'minutes'\n        : /s/.test(format)\n        ? 'seconds'\n        : '';\n      if (type) {\n        const min = 0;\n        const max = type === 'hours' ? 23 : 59;\n        const hours = this.computedTimeOptions(24);\n        const times = this.computedTimeOptions(60);\n        const options = type === 'hours' ? hours : times;\n        const formatMap = {\n          hours: 'HH',\n          minutes: 'mm',\n          seconds: 'ss'\n        };\n\n        inputs.push(\n          <Downshift\n            key={i + 'input'}\n            inputValue={date.format(formatMap[type])}\n          >\n            {({isOpen, getInputProps, openMenu, closeMenu}) => {\n              const inputProps = getInputProps({\n                onFocus: () => openMenu(),\n                onChange: (e: any) =>\n                  this.setTime(\n                    type,\n                    Math.max(\n                      min,\n                      Math.min(\n                        parseInt(\n                          e.currentTarget.value.replace(/\\D/g, ''),\n                          10\n                        ) || 0,\n                        max\n                      )\n                    )\n                  )\n              });\n              return (\n                <div className={cx('CalendarInputWrapper')}>\n                  <input\n                    type=\"text\"\n                    value={date.format(formatMap[type])}\n                    className={cx('CalendarInput')}\n                    min={min}\n                    max={max}\n                    {...inputProps}\n                  />\n                  {isOpen ? (\n                    <div className={cx('CalendarInput-sugs')}>\n                      {options.map(option => {\n                        return (\n                          <div\n                            key={option.value}\n                            className={cx('CalendarInput-sugsItem', {\n                              'is-highlight':\n                                option.value === date.format(formatMap[type])\n                            })}\n                            onClick={() => {\n                              this.setTime(type, parseInt(option.value, 10));\n                              closeMenu();\n                            }}\n                          >\n                            {option.value}\n                          </div>\n                        );\n                      })}\n                    </div>\n                  ) : null}\n                </div>\n              );\n            }}\n          </Downshift>\n        );\n\n        inputs.push(<span key={i + 'divider'}>:</span>);\n      }\n    });\n\n    inputs.length && inputs.pop();\n\n    return <div>{inputs}</div>;\n  };\n\n  renderFooter = () => {\n    if (!this.props.timeFormat && !this.props.requiredConfirm) {\n      return null;\n    }\n\n    const {translate: __, classnames: cx} = this.props;\n\n    return (\n      <tfoot key=\"tf\">\n        <tr>\n          <td colSpan={7}>\n            {this.props.timeFormat ? this.renderTimes() : null}\n            {this.props.requiredConfirm ? (\n              <div key=\"button\" className=\"rdtActions\">\n                <a\n                  className={cx('Button', 'Button--default')}\n                  onClick={this.cancel}\n                >\n                  {__('cancel')}\n                </a>\n                <a\n                  className={cx('Button', 'Button--primary', 'm-l-sm')}\n                  onClick={this.confirm}\n                >\n                  {__('confirm')}\n                </a>\n              </div>\n            ) : null}\n          </td>\n        </tr>\n      </tfoot>\n    );\n  };\n\n  render() {\n    const footer = this.renderFooter();\n    const date = this.props.viewDate;\n    const locale = date.localeData();\n    const __ = this.props.translate;\n\n    const tableChildren = [\n      <thead key=\"th\">\n        <tr>\n          <th colSpan={7}>\n            <div className=\"rdtHeader\">\n              <a\n                className=\"rdtPrev\"\n                onClick={this.props.subtractTime(1, 'years')}\n              >\n                &laquo;\n              </a>\n              <a\n                className=\"rdtPrev\"\n                onClick={this.props.subtractTime(1, 'months')}\n              >\n                &lsaquo;\n              </a>\n\n              <div className=\"rdtCenter\">\n                <a className=\"rdtSwitch\" onClick={this.props.showView('years')}>\n                  {date.format(__('dateformat.year'))}\n                </a>\n                <a\n                  className=\"rdtSwitch\"\n                  onClick={this.props.showView('months')}\n                >\n                  {date.format(__('MMM'))}\n                </a>\n              </div>\n\n              <a className=\"rdtNext\" onClick={this.props.addTime(1, 'months')}>\n                &rsaquo;\n              </a>\n              <a className=\"rdtNext\" onClick={this.props.addTime(1, 'years')}>\n                &raquo;\n              </a>\n            </div>\n          </th>\n        </tr>\n        <tr>\n          {this.getDaysOfWeek(locale).map((day: number, index: number) => (\n            <th key={day + index} className=\"dow\">\n              {day}\n            </th>\n          ))}\n        </tr>\n      </thead>,\n\n      <tbody key=\"tb\">{this.renderDays()}</tbody>\n    ];\n\n    footer && tableChildren.push(footer);\n\n    return (\n      <div className=\"rdtDays\">\n        <table>{tableChildren}</table>\n      </div>\n    );\n  }\n}\n\nexport default localeable(\n  CustomDaysView as any as React.ComponentClass<CustomDaysViewProps>\n);\n"
    ]
}