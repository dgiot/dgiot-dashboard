{
    "version": 3,
    "file": "GroupOrItem.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/condition-builder/GroupOrItem.tsx"
    ],
    "names": [],
    "mappings": ";;;;AAEA,qCAAkD;AAClD,6DAA0B;AAC1B,kCAA8B;AAC9B,6CAA4C;AAC5C,+DAAqC;AACrC,6DAAmC;AAmBnC;IAAmC,8CAAmC;IAAtE;;IA4EA,CAAC;IA1EC,wCAAgB,GAAhB,UAAiB,KAAU;QACzB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAGD,wCAAgB,GAAhB;;QACE,MAAA,MAAA,IAAI,CAAC,KAAK,EAAC,QAAQ,mDAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAED,8BAAM,GAAN;QACQ,IAAA,KAYF,IAAI,CAAC,KAAK,EAXA,EAAE,gBAAA,EACd,cAAc,oBAAA,EACd,KAAK,WAAA,EACL,MAAM,YAAA,EACN,MAAM,YAAA,EACN,KAAK,WAAA,EACL,SAAS,eAAA,EACT,IAAI,UAAA,EACJ,QAAQ,cAAA,EACR,UAAU,gBAAA,EACV,WAAW,iBACC,CAAC;QAEf,OAAO,CACL,uCAAK,SAAS,EAAE,EAAE,CAAC,eAAe,CAAC,aAAW,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,EAAE;YACrD,uCAAK,SAAS,EAAE,EAAE,CAAC,oBAAoB,CAAC;gBACrC,SAAS,CAAC,CAAC,CAAC,CACX,qCACE,SAAS,QACT,WAAW,EAAE,WAAW,EACxB,SAAS,EAAE,EAAE,CAAC,uBAAuB,CAAC;oBAEtC,8BAAC,YAAI,IAAC,IAAI,EAAC,UAAU,EAAC,SAAS,EAAC,MAAM,GAAG,CACvC,CACL,CAAC,CAAC,CAAC,IAAI;gBAEP,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,WAAW,EAAC,CAAC,CAAC,CACpB,8BAAC,eAAc,IACb,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE,WAAW,EACxB,MAAM,EAAE,MAAM,EACd,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,KAA4B,EACnC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAC/B,cAAc,EAAE,cAAc,EAC9B,KAAK,EAAE,KAAK,EACZ,UAAU,QACV,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAC/B,IAAI,EAAE,IAAI,GACV,CACH,CAAC,CAAC,CAAC,CACF;oBACE,8BAAC,cAAa,IACZ,QAAQ,EAAE,QAAQ,EAClB,UAAU,EAAE,UAAU,EACtB,MAAM,EAAE,MAAM,EACd,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,KAAuB,EAC9B,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAC/B,cAAc,EAAE,cAAc,EAC9B,KAAK,EAAE,KAAK,EACZ,IAAI,EAAE,IAAI,GACV;oBACF,qCAAG,SAAS,EAAE,EAAE,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,gBAAgB;wBAC1D,8BAAC,YAAI,IAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,GAAG,CACpC,CACH,CACJ,CACG,CACF,CACP,CAAC;IACJ,CAAC;IAzED;QADC,iBAAQ;;;;yDAGR;IAGD;QADC,iBAAQ;;;;yDAGR;IAmEH,oBAAC;CAAA,AA5ED,CAAmC,eAAK,CAAC,SAAS,GA4EjD;AA5EY,sCAAa;AA8E1B,kBAAe,IAAA,iBAAS,EAAC,aAAa,CAAC,CAAC",
    "sourcesContent": [
        "import {Config} from './config';\nimport {Fields, ConditionGroupValue, Funcs, ConditionValue} from './types';\nimport {ThemeProps, themeable} from '../../theme';\nimport React from 'react';\nimport {Icon} from '../icons';\nimport {autobind} from '../../utils/helper';\nimport ConditionGroup from './Group';\nimport ConditionItem from './Item';\n\nexport interface CBGroupOrItemProps extends ThemeProps {\n  config: Config;\n  value?: ConditionGroupValue;\n  fields: Fields;\n  funcs?: Funcs;\n  index: number;\n  data?: any;\n  draggable?: boolean;\n  disabled?: boolean;\n  searchable?: boolean;\n  onChange: (value: ConditionGroupValue, index: number) => void;\n  removeable?: boolean;\n  onDragStart?: (e: React.MouseEvent) => void;\n  onRemove?: (index: number) => void;\n  fieldClassName?: string;\n}\n\nexport class CBGroupOrItem extends React.Component<CBGroupOrItemProps> {\n  @autobind\n  handleItemChange(value: any) {\n    this.props.onChange(value, this.props.index);\n  }\n\n  @autobind\n  handleItemRemove() {\n    this.props.onRemove?.(this.props.index);\n  }\n\n  render() {\n    const {\n      classnames: cx,\n      fieldClassName,\n      value,\n      config,\n      fields,\n      funcs,\n      draggable,\n      data,\n      disabled,\n      searchable,\n      onDragStart\n    } = this.props;\n\n    return (\n      <div className={cx('CBGroupOrItem')} data-id={value?.id}>\n        <div className={cx('CBGroupOrItem-body')}>\n          {draggable ? (\n            <a\n              draggable\n              onDragStart={onDragStart}\n              className={cx('CBGroupOrItem-dragbar')}\n            >\n              <Icon icon=\"drag-bar\" className=\"icon\" />\n            </a>\n          ) : null}\n\n          {value?.conjunction ? (\n            <ConditionGroup\n              disabled={disabled}\n              searchable={searchable}\n              onDragStart={onDragStart}\n              config={config}\n              fields={fields}\n              value={value as ConditionGroupValue}\n              onChange={this.handleItemChange}\n              fieldClassName={fieldClassName}\n              funcs={funcs}\n              removeable\n              onRemove={this.handleItemRemove}\n              data={data}\n            />\n          ) : (\n            <>\n              <ConditionItem\n                disabled={disabled}\n                searchable={searchable}\n                config={config}\n                fields={fields}\n                value={value as ConditionValue}\n                onChange={this.handleItemChange}\n                fieldClassName={fieldClassName}\n                funcs={funcs}\n                data={data}\n              />\n              <a className={cx('CBDelete')} onClick={this.handleItemRemove}>\n                <Icon icon=\"close\" className=\"icon\" />\n              </a>\n            </>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default themeable(CBGroupOrItem);\n"
    ]
}