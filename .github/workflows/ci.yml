name: ci
on:
  push:
  workflow_dispatch:
env:
  TZ: Asia/Shanghai

jobs:
  linux:
    name: linux ðŸš€
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.13.2]
    steps:
      - name: Checkout ðŸš€
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }} ðŸš€
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache pnpm modules ðŸš€
        id: cache-pnpm-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: package version ðŸš€
        run: |
          npm i -g npm cnpm pnpm yarn @antfu/ni --registry=https://registry.npmmirror.com
          npm config set registry https://registry.npmmirror.com
          yarn config set registry https://registry.npmmirror.com
          pnpm config set registry https://registry.npmmirror.com
          node -v
          npm -v
          cnpm -v
          yarn -v
          pnpm -v
          npm config get registry
          cnpm config get registry
          yarn config get registry
          pnpm config get registry
      - name: pnpm ðŸš€
        run: |
          pnpm install
          pnpm build
      - name: cdn static ðŸš€
        run: |
          cd dist
          wget https://dgiot-release-1306147891.cos.ap-nanjing.myqcloud.com/v4.4.0/dgiot_dashboard.tar.gz
          tar xf dgiot_dashboard.tar.gz
          wget https://dgiot-release-1306147891.cos.ap-nanjing.myqcloud.com/v4.4.0/dgiot_swagger.tar.gz
          tar xf dgiot_swagger.tar.gz
          wget https://dgiot-release-1306147891.cos.ap-nanjing.myqcloud.com/v4.4.0/dgiot_file.tar.gz
          tar xf dgiot_file.tar.gz
          rm -rf dgiot_dashboard.tar.gz dgiot_swagger.tar.gz dgiot_file.tar.gz
          wget http://dev.iotn2n.com/swagger.json
      - name: Upload surge service and generate preview URL ðŸš€
        run: |
          export GITHUB_SHA=${{ github.sha }}
          export GITHUB_SHA_SUB=${GITHUB_SHA: 0: 7 }
          export DEPLOY_DOMAIN=https://dgiot-dashboard-ci-$GITHUB_SHA_SUB.surge.sh
          npx surge --project ./dist --domain $DEPLOY_DOMAIN --token ${{ secrets.surge_token }}
          echo the preview URL is $DEPLOY_DOMAIN
          echo "::set-output name=url::$DEPLOY_DOMAIN"
      - name: Cache npm modules ðŸš€
        id: cache-npm-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-npm-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: npm ðŸš€
        run: |
          npm install --legacy-peer-deps
          npm run build
      - name: Cache cnpm modules ðŸš€
        id: cache-cnpm-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-cnpm-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: cnpm ðŸš€
        run: |
          cnpm install
          npm install core-js@3.19.1
          cnpm run build
      - name: Cache yarn modules ðŸš€
        id: cache-yarn-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: yarn ðŸš€
        run: |
          yarn install
          yarn build
#      - name: Cache yarn2 modules ðŸš€
#        id: cache-yarn2-modules
#        uses: actions/cache@v2
#        env:
#          cache-name: cache-yarn2-modules
#        with:
#          path: '**/node_modules'
#          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
#      - name: yarn2 ðŸš€
#        run: |
#          yarn set version berry
#          yarn policies set-version berry
#          yarn -v
#          yarn install
#          yarn build


  windows:
    name: windows ðŸš€
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [16.13.2]
    steps:
      - name: Checkout ðŸš€
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }} ðŸš€
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: package version ðŸš€
        run: |
          npm i -g npm cnpm pnpm yarn @antfu/ni --registry=https://registry.npmmirror.com
          npm config set registry https://registry.npmmirror.com
          yarn config set registry https://registry.npmmirror.com
          pnpm config set registry https://registry.npmmirror.com
          node -v
          npm -v
          cnpm -v
          yarn -v
          pnpm -v
          npm config get registry
          cnpm config get registry
          yarn config get registry
          pnpm config get registry
      - name: Cache npm modules ðŸš€
        id: cache-npm-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-npm-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: npm ðŸš€
        run: |
          npm install --legacy-peer-deps
          npm run build
      - name: Cache pnpm modules ðŸš€
        id: cache-pnpm-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: pnpm ðŸš€
        run: |
          pnpm install
          pnpm build
      - name: Cache cnpm modules ðŸš€
        id: cache-cnpm-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-cnpm-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: cnpm ðŸš€
        run: |
          cnpm install
          npm install core-js@3.19.1
          cnpm run build
      - name: Cache yarn modules ðŸš€
        id: cache-yarn-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: yarn ðŸš€
        run: |
          yarn install
          yarn build

#      - name: Cache yarn2 modules ðŸš€
#        id: cache-yarn2-modules
#        uses: actions/cache@v2
#        env:
#          cache-name: cache-yarn2-modules
#        with:
#          path: '**/node_modules'
#          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
#      - name: yarn2 ðŸš€
#        run: |
#          yarn set version berry
#          yarn policies set-version berry
#          yarn -v
#          yarn install
#          yarn build
